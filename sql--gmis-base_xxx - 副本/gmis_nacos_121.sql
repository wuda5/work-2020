/*
 Navicat Premium Data Transfer

 Source Server         : 172.16.92.250
 Source Server Type    : MySQL
 Source Server Version : 50724
 Source Host           : 172.16.92.250:3306
 Source Schema         : gmis_nacos_121

 Target Server Type    : MySQL
 Target Server Version : 50724
 File Encoding         : 65001

 Date: 05/02/2021 14:03:48
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 353 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (67, 'common.yml', 'DEFAULT_GROUP', '# 在这里配置 所有的服务 和 所有环境 都相同的配置\r\n# 如果有个别服务，或者个别环境需要个性化配置， 只需要将配置，单独复制到指定的服务-${profiles.active}.yml即可\r\n\r\ngmis:\r\n  zipkin:\r\n    enabled: false\r\n  swagger:\r\n    license: Powered By gmis\r\n    licenseUrl: https://github.com/gmis\r\n    termsOfServiceUrl: https://github.com/gmis\r\n    version: 2.1\r\n    apiKeys:\r\n      - name: 令牌\r\n        keyname: token\r\n        passAs: header\r\n    global-operation-parameters:\r\n      - name: Authorization\r\n        description: 客户端信息\r\n        modelRef: String\r\n        parameterType: header\r\n        required: true\r\n        defaultValue: \"Basic enVpaG91X3VpOnp1aWhvdV91aV9zZWNyZXQ=\"\r\n      - name: tenant\r\n        description: 租户编码\r\n        modelRef: String\r\n        parameterType: header\r\n        required: true\r\n        defaultValue: \"MDAwMA==\"\r\n  injection:\r\n    # 是否启用 远程数据 手动注入\r\n    enabled: true\r\n    # 是否启用 远程数据 注解注入\r\n    aop-enabled: true\r\n    guavaCache:\r\n      enabled: true\r\n      maximumSize: 1000\r\n      refreshWriteTime: 10\r\n      refreshThreadPoolSize: 1000\r\n  security:\r\n    # 是否开启URI权限校验\r\n    enabled: true\r\n    type: FEIGN\r\n  scan:\r\n    type: FEIGN\r\n  log:\r\n    enabled: true\r\n    type: DB\r\n  context:\r\n    # 上下文拦截器\r\n    pathPatterns: \'/**\'\r\n    order: -20\r\n\r\n\r\nserver:\r\n  undertow: # jetty  undertow\r\n    io-threads: 8 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 120  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 2048  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\nspring:\r\n  messages:\r\n    basename: i18n/messages\r\n  zipkin:\r\n    sender:\r\n      type: RABBIT\r\n    enabled: ${gmis.zipkin.enabled}\r\n    discoveryClientEnabled: true\r\n    baseUrl: http://172.16.92.34:9411/  #http://gmis-zipkin:8772/\r\n    compression: # 压缩\r\n      enabled: true\r\n    locator: # 通过nacos动态获取地址\r\n      discovery:\r\n        enabled: true\r\n    rabbitmq: # 使用指定的队列\r\n      queue: gmis_zipkin\r\n  #被追踪的可能性，默认是0.1 表示百分之10\r\n  sleuth:\r\n    enabled: ${gmis.zipkin.enabled}\r\n    sampler:\r\n      probability: 1.0   # 采集率 1.0表示所有请求都采集， 生产线一般不会设置成1.0，影响效率\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 512MB      # Max file size，默认1M\r\n      max-request-size: 512MB   # Max request size，默认10M\r\n\r\ndozer:\r\n  mappingFiles:\r\n    - classpath*:dozer/*.dozer.xml\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n      enabled: true\r\n\r\nfeign:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  hystrix:\r\n    enabled: true   # feign 熔断机制是否开启\r\n    #支持压缩的mime types\r\n  compression:  # 请求压缩\r\n    request:\r\n      enabled: true\r\n      mime-types: text/xml,application/xml,application/json\r\n      min-request-size: 2048\r\n    response:  # 响应压缩\r\n      enabled: true\r\n\r\nribbon:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  ReadTimeout: 30000     #\r\n  ConnectTimeout: 30000  # [ribbon超时时间]大于[熔断超时],那么会先走熔断，相当于你配的ribbon超时就不生效了  ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n  MaxAutoRetries: 0             # 最大自动重试\r\n  MaxAutoRetriesNextServer: 1   # 最大自动像下一个服务重试\r\n  OkToRetryOnAllOperations: false  #无论是请求超时或者socket read timeout都进行重试，\r\n\r\n# 文件服务由于需要上传大文件，所以可以将超时时间测试大一些，其他服务超时时间是30s\r\ngmis-file-server:\r\n  ribbon:\r\n    ConnectTimeout: 300000\r\n    ReadTimeout: 300000\r\n\r\nhystrix:\r\n  threadpool:\r\n    default:\r\n      coreSize: 1000 # #并发执行的最大线程数，默认10\r\n      maxQueueSize: 1000 # #BlockingQueue的最大队列数\r\n      queueSizeRejectionThreshold: 500 # #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝\r\n  command:\r\n    default:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 120000  # 熔断超时 ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n    gmis-file-server:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 1200000\r\n', '6297e637f6d2dc09b5dbee7607fa8479', '2020-08-17 13:23:51', '2020-10-28 14:43:04', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (68, 'gmis-authority-server.yml', 'DEFAULT_GROUP', '# 在这里配置 权限服务 所有环境都能使用的配置\r\ngmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      auth:\r\n        title: 权限模块\r\n        base-package: com.cdqckj.gmis.authority.controller.auth\r\n      common:\r\n        title: 公共模块\r\n        base-package: com.cdqckj.gmis.authority.controller.common\r\n      core:\r\n        title: 组织模块\r\n        base-package: com.cdqckj.gmis.authority.controller.core\r\n      tenant:\r\n        title: 租户模块\r\n        base-package: com.cdqckj.gmis.tenant.controller\r\n\r\nserver:\r\n  port: 8764\r\n\r\n', 'fe856b75e4b47f0a10d75ebb0a58aedc', '2020-08-17 13:23:51', '2020-09-23 10:32:23', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (69, 'gmis-demo-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      demo:\r\n        title: 演示服务\r\n        base-package: com.cdqckj.gmis.demo.controller\r\n\r\nserver:\r\n  port: 8770\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n', '83cdafb1b4396694feefd7e89058d199', '2020-08-17 13:23:51', '2020-08-17 13:23:51', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (70, 'gmis-file-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  nginx:\r\n    ip: ${spring.cloud.client.ip-address}   # 正式环境需要将该ip设置成nginx对应的 公网ip\r\n    port: 10000                             # 正式环境需要将该ip设置成nginx对应的 公网端口\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      file:\r\n        title: 文件服务\r\n        base-package: com.cdqckj.gmis.file.controller\r\n  file:\r\n    type: TENCENT_COS # LOCAL # FAST_DFS LOCAL\r\n    storage-path: /data/projects/uploadfile/file/     # 文件存储路径  （ 某些版本的 window 需要改成  D:\\\\data\\\\projects\\\\uploadfile\\\\file\\\\  ）  /data/projects/uploadfile/file/\r\n    uriPrefix: http://${gmis.nginx.ip}:${gmis.nginx.port}/file/   # 文件访问 需要通过这个uri前缀进行访问\r\n    inner-uri-prefix: null  #  内网的url前缀\r\n    down-by-id: http://${gmis.nginx.ip}:${gmis.nginx.port}/api/file/attachment/download?ids[]=%s\r\n    down-by-biz-id: http://${gmis.nginx.ip}:${gmis.nginx.port}/api/file/attachment/download/biz?bizIds[]=%s\r\n    down-by-url: http://${gmis.nginx.ip}:${gmis.nginx.port}/api/file/attachment/download/url?url=%s&filename=%s\r\n    ali:\r\n      # 请填写自己的阿里云存储配置\r\n      uriPrefix: http://test.oss-cn-shenzhen.aliyuncs.com/\r\n      bucket-name: test\r\n      endpoint: http://oss-cn-shenzhen.aliyuncs.com\r\n      access-key-id: test\r\n      access-key-secret: test\r\n    tencent:\r\n      app-id: 1259370834\r\n      secret-id: AKIDD7oMaYmgqbu73myPJly4tSoujHtFLbOv\r\n      secret-key: g7JH0d1B9oCNaaT4RQAbl5b090kETRhc\r\n      regin-name: ap-chengdu\r\n      bucket-name: file-test-1259370834\r\n      path: https://file-test-1259370834.cos.ap-chengdu.myqcloud.com/\r\n\r\n#FAST_DFS配置\r\nfdfs:\r\n  soTimeout: 1500\r\n  connectTimeout: 600\r\n  thumb-image:\r\n    width: 150\r\n    height: 150\r\n  tracker-list:\r\n    - 192.168.1.2:22122\r\n  pool:\r\n    #从池中借出的对象的最大数目\r\n    max-total: 153\r\n    max-wait-millis: 102\r\n    jmx-name-base: 1\r\n    jmx-name-prefix: 1\r\n\r\n\r\nserver:\r\n  port: 8765\r\n', '8201e014fd545e6af0306fb16fcdfe37', '2020-08-17 13:23:51', '2020-08-17 13:23:51', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (71, 'gmis-gateway-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  log:\r\n    enabled: false\r\n\r\nspring:\r\n  autoconfigure:\r\n    # cao，升级到1.2.0后，gateway要排除这个依赖，排查了2个小时 2020年04月21日00:51:18\r\n    exclude: io.seata.integration.http.HttpAutoConfiguration\r\n  cloud:\r\n    gateway:\r\n      x-forwarded:\r\n        prefixEnabled: false\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n          lowerCaseServiceId: true\r\n      routes:\r\n        - id: oauth\r\n          uri: lb://gmis-oauth-server\r\n          predicates:\r\n            - Path=/oauth/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: file\r\n          uri: lb://gmis-file-server\r\n          predicates:\r\n            - Path=/file/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: authority\r\n          uri: lb://gmis-authority-server\r\n          predicates:\r\n            - Path=/authority/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: msgs\r\n          uri: lb://gmis-msgs-server\r\n          predicates:\r\n            - Path=/msgs/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: demo\r\n          uri: lb://gmis-demo-server\r\n          predicates:\r\n            - Path=/demo/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: order\r\n          uri: lb://gmis-order-server\r\n          predicates:\r\n            - Path=/order/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: pay\r\n          uri: lb://gmis-pay-server\r\n          predicates:\r\n            - Path=/pay/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'  \r\n        - id: configure\r\n          uri: lb://gmis-operateparam-server\r\n          predicates:\r\n            - Path=/operateparam/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: bizcenter\r\n          uri: lb://gmis-bizcenter-server\r\n          predicates:\r\n            - Path=/bizcenter/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: archive\r\n          uri: lb://gmis-userarchive-server\r\n          predicates:\r\n            - Path=/userarchive/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'          \r\n\r\n        - id: device\r\n          uri: lb://gmis-device-server\r\n          predicates:\r\n            - Path=/device/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'                        \r\n        - id: systemparam\r\n          uri: lb://gmis-systemparam-server\r\n          predicates:\r\n            - Path=/systemparam/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: readmeter\r\n          uri: lb://gmis-readmeter-server\r\n          predicates:\r\n            - Path=/readmeter/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: offlinepay\r\n          uri: lb://gmis-offlinepay-server\r\n          predicates:\r\n            - Path=/offlinepay/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: install\r\n          uri: lb://gmis-install-server\r\n          predicates:\r\n            - Path=/install/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: bizjobcenter\r\n          uri: lb://gmis-bizjobcenter-server\r\n          predicates:\r\n            - Path=/bizjobcenter/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: iotQc\r\n          uri: lb://gmis-iot-qc-server\r\n          predicates:\r\n            - Path=/iotQc/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'                \r\nserver:\r\n  port: 8760\r\n  servlet:\r\n    context-path: /api  # = server.servlet.context-path', '2e5dcfba626bf86e7477c677c385cc1', '2020-08-17 13:23:51', '2020-10-13 10:57:14', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (72, 'gmis-monitor.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 8762\r\n  servlet:\r\n    context-path: /${spring.application.name}   # 监控系统项目名\r\n\r\nturbine:\r\n  stream:\r\n    port: 8763\r\n\r\nspring:\r\n  #  mail:\r\n  #    host: smtp.163.com\r\n  #    username: adadminfocus@163.com\r\n  #    password: adsugar123\r\n  #    properties:\r\n  #      smtp:\r\n  #        auth: true\r\n  #        starttls:\r\n  #          enable: true\r\n  #          required: true\r\n  boot:\r\n    admin:\r\n      routes:\r\n        endpoints: env,metrics,dump,jolokia,info,configprops,trace,logfile,refresh,flyway,liquibase,heapdump,loggers,auditevents,hystrix.stream\r\n      turbine:\r\n        clusters: default\r\n        location: http://${gmis.local-ip}:${turbine.stream.port}${server.servlet.context-path}\r\n  #      context-path: ${management.context-path}\r\n  #      notify:\r\n  #        mail:\r\n  #          to: 604141215@qq.com\r\n  #          from: adadminfocus@163.com\r\n  #          ignore-changes: UNKNOWN:UP\r\n  security:\r\n    user:\r\n      name: gmis\r\n      password: gmis\r\n      roles: USER\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n      enabled: true\r\n', '55a15a97da269cdddae4395f86dd57d', '2020-08-17 13:23:51', '2020-08-17 13:23:51', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (73, 'gmis-msgs-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      sms:\r\n        title: 短信模块\r\n        base-package: com.cdqckj.gmis.sms.controller\r\n      msgs:\r\n        title: 消息模块\r\n        base-package: com.cdqckj.gmis.msgs.controller\r\n      mail:\r\n        title: 邮件模块\r\n        base-package: com.cdqckj.gmis.mail.controller\r\n  cache:\r\n    type: REDIS   # CAFFEINE\r\n    def:\r\n      keyPrefix: ${spring.profiles.active}\r\n    configs:\r\n      gmis:\r\n        timeToLive: 1h\r\n        keyPrefix: aaa\r\n      test:\r\n        timeToLive: 2h\r\n  provider:\r\n    type: TENCENT\r\n    tencent:\r\n      app-id: 1400408010\r\n      app-secret: 4ef417bd89ccb49a876f6f698940bb4d\r\n      secret-id: AKIDD7oMaYmgqbu73myPJly4tSoujHtFLbOv\r\n      secret-key: g7JH0d1B9oCNaaT4RQAbl5b090kETRhc\r\n      regin-name: ap-chengdu\r\n      bucket-name: file-test-1259370834\r\n      path: https://file-test-1259370834.cos.ap-chengdu.myqcloud.com/\r\nserver:\r\n  port: 8768', '7d6dd1185001c09ef4329ad90ef0c761', '2020-08-17 13:23:51', '2020-08-17 13:23:51', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (74, 'gmis-oauth-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 8773\r\n\r\ngmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    enabled: true\r\n    title: 认证服务\r\n    base-package: com.cdqckj.gmis\r\n\r\n\r\nauthentication:\r\n  expire: 28800               # token有效期为8小时\r\n  refreshExpire: 86400        # 刷新token有效期为24小时\r\n', '265ea33c075f631000e878639da67f59', '2020-08-17 13:23:51', '2020-09-23 10:32:04', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (75, 'gmis-order-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      order:\r\n        title: 演示服务\r\n        base-package: com.cdqckj.gmis.order.controller\r\n\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\n\r\nserver:\r\n  port: 8769\r\n', 'e9684e3263de9835915c9c884a7e7b6e', '2020-08-17 13:23:51', '2020-08-17 13:23:51', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (76, 'gmis-zuul-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  swagger:\r\n    enabled: true\r\n    title: 网关模块\r\n    base-package: com.cdqckj.gmis.zuul.controller\r\n  log:\r\n    enabled: false\r\n\r\nspring:\r\n  mvc:\r\n    servlet:\r\n      path: /gate\r\n\r\nserver:\r\n  port: 8760\r\n  servlet:\r\n    context-path: /api  # = server.servlet.context-path\r\n\r\nzuul:\r\n  # 一些比较敏感的请求头，不想通过zuul传递过去， 可以通过该属性进行设置\r\n  sensitiveHeaders: \'\'\r\n  #添加代理头\r\n  add-proxy-headers: true\r\n  #  debug:\r\n  #    request: true\r\n  #  include-debug-header: true\r\n  retryable: false\r\n  servlet-path: /         # 默认是/zuul , 上传文件需要加/zuul前缀才不会出现乱码，这个改成/ 即可不加前缀\r\n  ignored-services: \"*\"   # 忽略eureka上的所有服务\r\n  #  prefix: /api #为zuul设置一个公共的前缀\r\n  #  strip-prefix: false     #对于代理前缀默认会被移除   故加入false  表示不要移除\r\n  routes:  # 路由配置方式\r\n    authority:  # 其中 authority 是路由名称，可以随便定义，但是path和service-id需要一一对应\r\n      path: /authority/**\r\n      serviceId: gmis-authority-server\r\n    oauth:\r\n      path: /oauth/**\r\n      serviceId: gmis-oauth-server\r\n    file:\r\n      path: /file/**\r\n      serviceId: gmis-file-server\r\n    msgs:\r\n      path: /msgs/**\r\n      serviceId: gmis-msgs-server\r\n    order:\r\n      path: /order/**\r\n      serviceId: gmis-order-server\r\n    demo:\r\n      path: /demo/**\r\n      serviceId: gmis-demo-server\r\n    sysConf:\r\n      path: /sysConf/**\r\n      serviceId: gmis-sysConf-server\r\n    systemparam:\r\n      path: /systemparam/**\r\n      serviceId: gmis-systemparam-server', '9efaa14445337a1afbd72441f34de184', '2020-08-17 13:23:51', '2020-08-17 13:23:51', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (77, 'mysql.yml', 'DEFAULT_GROUP', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到gmis-authority-server-dev.yml中将数据库名和ip改掉\r\ngmis:\r\n  seata:\r\n    ip: ${SEATA_IP:172.16.92.250}\r\n    port: ${SEATA_PORT:8091}\r\n    namespace: ${SEATA_ID:3cca7d98-3b1c-44d3-90e5-86abaaf0048a}\r\n  mysql:\r\n    ip: 172.16.92.156\r\n    port: 3306\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    database: gmis_defaults\r\n    username: root\r\n    password: 123456\r\n    url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n  database:      # 数据库配置请看DatabaseProperties类上的注释\r\n    isSeata: false\r\n    isNotWrite: false\r\n    tenantDatabasePrefix: gmis_base\r\n    multiTenantType: DATASOURCE\r\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\r\n    worker-id: 0\r\n    data-center-id: 0\r\n\r\n# mysql 通用配置\r\nspring:\r\n  datasource:\r\n    # 从这里开始(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    dynamic:\r\n      enabled: false  # 这里一定要写成false， 是否开启根据 gmis.database.multiTenantType 来决定\r\n      p6spy: true\r\n      seata: ${gmis.database.isSeata:false}\r\n      druid:\r\n        initialSize: 10\r\n        minIdle: 10\r\n        maxActive: 50\r\n        max-wait: 60000\r\n        pool-prepared-statements: true\r\n        max-pool-prepared-statement-per-connection-size: 20\r\n        validation-query: SELECT \'x\'\r\n        test-on-borrow: false\r\n        test-on-return: false\r\n        test-while-idle: true\r\n        time-between-eviction-runs-millis: 30000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n        min-evictable-idle-time-millis: 150000    # 配置一个连接在池中最小生存的时间，单位是毫秒\r\n        filters: stat,wall\r\n        wall:\r\n          comment-allow: true\r\n          multiStatementAllow: true\r\n          noneBaseStatementAllow: true\r\n      datasource:\r\n        master:       # 默认的数据源\r\n          username: ${gmis.mysql.username}\r\n          password: ${gmis.mysql.password}\r\n          driver-class-name: ${gmis.mysql.driverClassName}\r\n          url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n          db-type: mysql\r\n    # 从这里结束(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    druid:\r\n      enable: true\r\n      # 从这里开始(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n      username: ${gmis.mysql.username}\r\n      password: ${gmis.mysql.password}\r\n      driver-class-name: ${gmis.mysql.driverClassName}\r\n      url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n      db-type: mysql\r\n      initialSize: 10\r\n      minIdle: 10\r\n      maxActive: 50\r\n      max-wait: 60000\r\n      pool-prepared-statements: true\r\n      max-pool-prepared-statement-per-connection-size: 20\r\n      validation-query: SELECT \'x\'\r\n      test-on-borrow: false\r\n      test-on-return: false\r\n      test-while-idle: true\r\n      time-between-eviction-runs-millis: 30000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n      min-evictable-idle-time-millis: 150000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n      filters: stat,wall\r\n      filter:\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            commentAllow: true\r\n            multiStatementAllow: true\r\n            noneBaseStatementAllow: true\r\n      # 从这里结束(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n\r\n      # 以下的2段配置，同时适用于所有模式\r\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\r\n        enabled: true\r\n        url-pattern: /*\r\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\r\n        session-stat-max-count: 1000\r\n        profile-enable: true\r\n        session-stat-enable: false\r\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\r\n        enabled: true\r\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\r\n        reset-enable: true    #允许清空统计数据\r\n        login-username: gmis\r\n        login-password: gmis\r\n\r\nmybatis-plus:\r\n  mapper-locations:\r\n    - classpath*:mapper_**/**/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.cdqckj.gmis.*.entity;com.cdqckj.gmis.database.mybatis.typehandler\r\n  typeEnumsPackage: com.cdqckj.gmis.*.enumeration\r\n  global-config:\r\n    db-config:\r\n      id-type: INPUT\r\n      insert-strategy: NOT_NULL\r\n      update-strategy: NOT_NULL\r\n      select-strategy: NOT_EMPTY\r\n  configuration:\r\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n    #配置JdbcTypeForNull, oracle数据库必须配置\r\n    jdbc-type-for-null: \'null\'\r\n\r\n# 分布式事务相关\r\nseata:\r\n  enabled: ${gmis.database.isSeata}\r\n  enableAutoDataSourceProxy: true\r\n  tx-service-group: gmis_admin_seata_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: ${gmis.nacos.ip}:${gmis.nacos.port}\r\n      username: ${gmis.nacos.username}\r\n      password: ${gmis.nacos.password}\r\n      namespace: ${gmis.seata.namespace}\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: ${gmis.nacos.ip}:${gmis.nacos.port}\r\n      username: ${gmis.nacos.username}\r\n      password: ${gmis.nacos.password}\r\n      namespace: ${gmis.seata.namespace}\r\n  service:\r\n    grouplist:\r\n      default: ${gmis.seata.ip:}:${gmis.seata.port:}\r\n    vgroup-mapping:\r\n      gmis_admin_seata_tx_group: default\r\n    disable-global-transaction: false\r\n  client:\r\n    rm:\r\n      report-success-enable: false\r\n', 'd65d17ca8c4b01da4bf4d4252ed28629', '2020-08-17 13:23:51', '2021-02-01 14:05:21', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (78, 'rabbitmq.yml', 'DEFAULT_GROUP', 'gmis:\r\n  rabbitmq:\r\n    # 若系统中有除了zipkin之外的地方使用了mq ，则一定不能设置成false\r\n    enabled: true\r\n    ip: 172.16.92.156\r\n    port: 5672\r\n    username: gmis\r\n    password: gmis\r\n\r\nspring:\r\n  rabbitmq:\r\n    enabled: ${gmis.rabbitmq.enabled}\r\n    host: ${gmis.rabbitmq.ip}\r\n    port: ${gmis.rabbitmq.port}\r\n    username: ${gmis.rabbitmq.username}\r\n    password: ${gmis.rabbitmq.password}\r\n    listener:\r\n      type: direct # simple direct\r\n', 'cbd55df62e02764124dc717c64b1f766', '2020-08-17 13:23:51', '2020-10-13 19:39:29', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (79, 'redis.yml', 'DEFAULT_GROUP', '# redis 通用配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到gmis-authority-server-dev.yml中将数据库名和ip改掉\r\ngmis:\r\n  redis:\r\n    ip: 172.16.92.156\r\n    port: 6379\r\n    password: \'\'\r\n    database: 0\r\n\r\nspring:\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${gmis.redis.ip}\r\n    password: ${gmis.redis.password}\r\n    port: ${gmis.redis.port}\r\n    database: ${gmis.redis.database}\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  # l2-cache-open: true\r\n  l2-cache-open: false     # 关闭二级缓存\r\n  broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  #  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace: \'\'\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${gmis.redis.ip}:${gmis.redis.port}\r\n  password: ${gmis.redis.password}\r\n  database: ${gmis.redis.database}\r\n  sentinelMasterId: \'\'\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000\r\n', 'f771ef7a7031ed22f9146caa02daa7c3', '2020-08-17 13:23:51', '2020-10-27 18:18:10', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (80, 'gmis-systemparam-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      systemparamNew:\r\n        title: 系统参数配置服务\r\n        base-package: com.cdqckj.gmis.systemparamNew.controller\r\n      demo:\r\n        title: 演示服务\r\n        base-package: com.cdqckj.gmis.demo.controller\r\nribbon:\r\n  eureka:\r\n    enabled: true\r\nserver:\r\n  port: 8774\r\n\r\n\r\n## 请在nacos中新建一个名为: gmis-systemparam-server.yml 的配置文件，并将： gmis-systemparam-server/src/main/resources/gmis-systemparam-server.yml 配置文件的内容移动过去\r\n## 然后删除此文件！！！\r\n', 'b925c4835af4093745dc15ba62375274', '2020-08-17 13:23:51', '2020-08-17 13:23:51', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (81, 'gmis-operateparam-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      operateparam:\r\n        title: 运营配置模块\r\n        base-package: com.cdqckj.gmis.operateparam.controller\r\n      systemparam:\r\n        title: 系统配置模块\r\n        base-package: com.cdqckj.gmis.systemparam.controller\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8770\r\n', 'd24d2e755752bab8d7da127add65e092', '2020-08-17 13:23:51', '2020-08-17 13:23:51', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (82, 'gmis-bizcenter-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      configure:\r\n        title: 运营配置模块\r\n        base-package: com.cdqckj.gmis.bizcenter.operation.config.controller\r\n      device:\r\n        title: 设备服务模块\r\n        base-package: com.cdqckj.gmis.bizcenter.device.archives.controller\r\n      systemparam:\r\n        title: 系统配置模块\r\n        base-package: com.cdqckj.gmis.bizcenter.sys.config.controller\r\n      userarchive:\r\n        title: 客户档案模块\r\n        base-package: com.cdqckj.gmis.bizcenter.customer.archives.controller\r\n      devicearchive:\r\n        title: 设备档案模块\r\n        base-package: com.cdqckj.gmis.bizcenter.device.archives.controller\r\n      install:\r\n        title: 报装模块\r\n        base-package: com.cdqckj.gmis.bizcenter.operation.install.controller\r\n      securitycheck:\r\n        title: 安检模块\r\n        base-package: com.cdqckj.gmis.bizcenter.securitycheck.controller\r\n      maintenance:\r\n        title: 运行维护模块\r\n        base-package: com.cdqckj.gmis.bizcenter.operation.maintain.controller\r\n      tempcounter:\r\n        title: 临时综合\r\n        base-package: com.cdqckj.gmis.bizcenter.temp.counter.controller\r\n      charges:\r\n        title: 收费模块\r\n        base-package: com.cdqckj.gmis.bizcenter.charges.controller \r\n      readmeter:\r\n        title: 抄表服务\r\n        base-package: com.cdqckj.gmis.bizcenter.read.meter.controller\r\n      dailycounter:\r\n        title: 日常综合\r\n        base-package: com.cdqckj.gmis.bizcenter.daily.counter.controller\r\n      iot:\r\n        title: 远传表模块\r\n        base-package: com.cdqckj.gmis.bizcenter.iot.controller\r\n      \r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8802\r\n', 'd70b833b0bbd920f88573919cd9b3d23', '2020-08-17 13:23:51', '2021-02-05 13:23:30', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (83, 'gmis-readmeter-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      readmeter:\r\n        title: 抄表服务\r\n        base-package: com.cdqckj.gmis.readmeter.controller\r\n\r\nserver:\r\n  port: 8774\r\n\r\n\r\n## 请在nacos中新建一个名为: gmis-readmeter-server.yml 的配置文件，并将： gmis-readmeter-server/src/main/resources/gmis-readmeter-server.yml 配置文件的内容移动过去\r\n## 然后删除此文件！！！', 'd779eb00a4b013c1cc82fa23c891d744', '2020-08-17 13:23:51', '2020-11-11 16:30:33', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (84, 'gmis-pay-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n       pay:\r\n        title: 支付服务\r\n        base-package: com.cdqckj.gmis.pay.controller\r\n\r\nserver:\r\n  port: 8781\r\n\r\nspring:\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        metadata:\r\n          grayversion: 1.0', '9342380ac031a5fbd32cf8b20f528eae', '2020-08-17 13:23:51', '2020-08-17 13:23:51', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (85, 'gmis-offlinepay-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  swagger:\r\n    docket:\r\n      offlinepay:\r\n        title: 线下支付服务服务\r\n        base-package: com.cdqckj.gmis.offlinepay.controller\r\n\r\nserver:\r\n  port: 8782', 'eb391a269e2800f7107cf4ef508db591', '2020-08-17 13:23:51', '2020-08-17 13:23:51', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (86, 'gmis-onlinepay-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n       pay:\r\n        title: 支付服务\r\n        base-package: com.cdqckj.gmis.pay.controller\r\n\r\nserver:\r\n  port: 8785\r\n\r\nspring:\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        metadata:\r\n          grayversion: 1.0', '3346a23da93b44359489d90203a13f51', '2020-08-17 13:23:51', '2020-08-17 13:23:51', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (89, 'gmis-calculate-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      calculate:\r\n        title: 燃气计费服务服务\r\n        base-package: com.cdqckj.gmis.calculate.controller\r\n\r\nserver:\r\n  port: 8786\r\n\r\n\r\n## 请在nacos中新建一个名为: gmis-calculate-server.yml 的配置文件，并将： gmis-calculate-server/src/main/resources/gmis-calculate-server.yml 配置文件的内容移动过去\r\n## 然后删除此文件！！！', '927ac72dbd96d8380470cf48ef016f1e', '2020-08-26 17:16:09', '2020-09-25 11:03:16', NULL, '0:0:0:0:0:0:0:1', 'gmis-calculate-server', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'gmis-calculate-server', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (90, 'gmis-bizjobcenter-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      bizjobcenter:\r\n        title: 调度聚合服务服务\r\n        base-package: com.cdqckj.gmis.bizjobcenter.controller\r\n\r\nserver:\r\n  port: 8804', '6594a0514dd62ea9b6db3f030c59c6ed', '2020-09-16 08:29:06', '2020-12-16 10:37:15', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'gmis-bizjobcenter-server', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (96, 'gmis-executor-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  seata:\r\n    ip: ${SEATA_IP:172.16.92.250}\r\n    port: ${SEATA_PORT:8091}\r\n    namespace: ${SEATA_ID:3cca7d98-3b1c-44d3-90e5-86abaaf0048a}\r\n  mysql:\r\n    ip: ${MYSQL_IP:127.0.0.1}\r\n    port: 3306\r\n    username: root\r\n    password: 123456\r\n    database: gmis_defaults\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n  redis:\r\n    ip: 127.0.0.1\r\n    port: 6379\r\n    database: 0\r\n    password: \'\'\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n    tenantDatabasePrefix: gmis_base\r\n    isBlockAttack: false\r\n    worker-id: 0\r\n    data-center-id: 0\r\n\r\n### xxl-job email\r\nxxl.job:\r\n  accessToken:\r\n  # 以下是client 执行器端配置（注意：若不想配置调度器也是执行器，请自行参考xxl）\r\n  admin:\r\n    addresses: http://${JOBS_IP:127.0.0.1}:${JOBS_PORT:8767}/gmis-jobs-server\r\n  executor:\r\n    appname: ${spring.application.name}\r\n    ip: ${EXECUTOR_IP:127.0.0.1}\r\n    port: ${EXECUTOR_PORT:8775}\r\n    registryLazy: 10000  # 延迟10秒注册，防止首次启动报错\r\n    logpath: ${logging.file.path}/${spring.application.name}/\r\n    logretentiondays: -1\r\n\r\nserver:\r\n  servlet:\r\n    context-path: /${spring.application.name}\r\n  port: 8875\r\n  undertow: # jetty  undertow\r\n    io-threads: 4 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 80  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 1024  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\n# mysql 通用配置\r\nspring:\r\n  profiles:\r\n    active: dev\r\n  datasource:\r\n    # 从这里开始(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    dynamic:\r\n      enabled: false  # 这里一定要写成false， 是否开启根据 gmis.database.multiTenantType 来决定\r\n      p6spy: true\r\n      seata: ${gmis.database.isSeata:false}\r\n      druid:\r\n        initialSize: 10\r\n        minIdle: 10\r\n        maxActive: 500\r\n        max-wait: 60000\r\n        pool-prepared-statements: true\r\n        max-pool-prepared-statement-per-connection-size: 20\r\n        validation-query: SELECT \'x\'\r\n        test-on-borrow: false\r\n        test-on-return: false\r\n        test-while-idle: true\r\n        time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n        min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n        filters: stat,wall\r\n        wall:\r\n          comment-allow: true\r\n          multiStatementAllow: true\r\n          noneBaseStatementAllow: true\r\n      datasource:\r\n        master:\r\n          username: ${gmis.mysql.username}\r\n          password: ${gmis.mysql.password}\r\n          driver-class-name: ${gmis.mysql.driverClassName}\r\n          url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n          db-type: mysql\r\n    # 从这里结束(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    druid:\r\n      enable: true\r\n      # 从这里开始(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n      username: ${gmis.mysql.username}\r\n      password: ${gmis.mysql.password}\r\n      driver-class-name: ${gmis.mysql.driverClassName}\r\n      url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n      db-type: mysql\r\n      initialSize: 10\r\n      minIdle: 10\r\n      maxActive: 500\r\n      max-wait: 60000\r\n      pool-prepared-statements: true\r\n      max-pool-prepared-statement-per-connection-size: 20\r\n      validation-query: SELECT \'x\'\r\n      test-on-borrow: false\r\n      test-on-return: false\r\n      test-while-idle: true\r\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n      filters: stat,wall\r\n      filter:\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            commentAllow: true\r\n            multiStatementAllow: true\r\n            noneBaseStatementAllow: true\r\n      # 从这里结束(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n\r\n      # 以下的2段配置，同时适用于所有模式\r\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\r\n        enabled: true\r\n        url-pattern: /*\r\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\r\n        session-stat-max-count: 1000\r\n        profile-enable: true\r\n        session-stat-enable: false\r\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\r\n        enabled: true\r\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\r\n        reset-enable: true    #允许清空统计数据\r\n        login-username: gmis\r\n        login-password: gmis\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${gmis.redis.ip}\r\n    password: ${gmis.redis.password}\r\n    port: ${gmis.redis.port}\r\n    database: ${gmis.redis.database}\r\n\r\n#mybatis:\r\n#  mapper-locations: classpath:mybatis-mapper/*.xml\r\n\r\nmybatis-plus:\r\n  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml\r\n  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml\r\n  mapper-locations:\r\n    - classpath:mybatis-mapper/**/*Mapper.xml\r\n    - classpath*:mapper_**/**/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.xxl.job.admin.core.model;com.cdqckj.gmis.*.entity;com.cdqckj.gmis.database.mybatis.typehandler\r\n  typeEnumsPackage: com.cdqckj.gmis.*.enumeration\r\n  global-config:\r\n    db-config:\r\n      id-type: INPUT\r\n      insert-strategy: NOT_NULL\r\n      update-strategy: NOT_NULL\r\n      select-strategy: NOT_EMPTY\r\n  configuration:\r\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n    #配置JdbcTypeForNull, oracle数据库必须配置\r\n    jdbc-type-for-null: \'null\'\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  #  l2-cache-open: true\r\n  l2-cache-open: false     # 关闭二级缓存\r\n  #broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace:\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${gmis.redis.ip}:${gmis.redis.port}\r\n  password: ${gmis.redis.password}\r\n  database: 0\r\n  sentinelMasterId:\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000\r\n', '68c66a44e8ba1c9c852221380e6e0dd5', '2020-09-17 09:19:32', '2020-12-16 11:53:28', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'gmis-executor-server', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (99, 'gmis-jobs-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  mysql:\r\n    ip: ${MYSQL_IP:172.16.92.156}\r\n    port: 3306\r\n    username: root\r\n    password: 123456\r\n    database: gmis_defaults\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n  redis:\r\n    ip: 127.0.0.1\r\n    port: 6379\r\n    database: 0\r\n    password: \'\'\r\n  database:\r\n    multiTenantType: DATASOURCE\r\n    tenantDatabasePrefix: gmis_base\r\n    isBlockAttack: false\r\n    worker-id: 0\r\n    data-center-id: 0\r\n\r\n### xxl-job email\r\nxxl.job:\r\n  mail:\r\n    host: smtp.163.com\r\n    port: 25\r\n    ssl: false\r\n    username: ovono802302@163.com\r\n    password: asdfzxcv\r\n    sendNick: 《任务调度平台gmis-JOB》\r\n  login:\r\n    username: admin\r\n    password: admin\r\n  accessToken:\r\n  i18n:\r\n  # 以下是client 执行器端配置（注意：若不想配置调度器也是执行器，请自行参考xxl）\r\n  admin:\r\n    addresses: http://127.0.0.1:${server.port}/${spring.application.name}\r\n  executor:\r\n    appname: ${spring.application.name}\r\n    ip: ${EXECUTOR_IP:127.0.0.1}\r\n    port: ${EXECUTOR_PORT:8871}\r\n    registryLazy: 10000  # 延迟10秒注册，防止首次启动报错\r\n    logpath: ${logging.file.path}/${spring.application.name}/\r\n    logretentiondays: -1\r\n\r\n\r\nserver:\r\n  servlet:\r\n    context-path: /${spring.application.name}\r\n  port: 8767\r\n  undertow: # jetty  undertow\r\n    io-threads: 4 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 80  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 1024  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\n\r\n# mysql 通用配置\r\nspring:\r\n  profiles:\r\n    active: dev\r\n  datasource:\r\n    # 从这里开始(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    dynamic:\r\n      enabled: false  # 这里一定要写成false， 是否开启根据 gmis.database.multiTenantType 来决定\r\n      p6spy: true\r\n      druid:\r\n        initialSize: 10\r\n        minIdle: 10\r\n        maxActive: 500\r\n        max-wait: 60000\r\n        pool-prepared-statements: true\r\n        max-pool-prepared-statement-per-connection-size: 20\r\n        validation-query: SELECT \'x\'\r\n        test-on-borrow: false\r\n        test-on-return: false\r\n        test-while-idle: true\r\n        time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n        min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n        filters: stat,wall\r\n        wall:\r\n          comment-allow: true\r\n          multiStatementAllow: true\r\n          noneBaseStatementAllow: true\r\n      datasource:\r\n        master:\r\n          username: ${gmis.mysql.username}\r\n          password: ${gmis.mysql.password}\r\n          driver-class-name: ${gmis.mysql.driverClassName}\r\n          url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n          db-type: mysql\r\n    # 从这里结束(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    druid:\r\n      enable: true\r\n      # 从这里开始(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n      username: ${gmis.mysql.username}\r\n      password: ${gmis.mysql.password}\r\n      driver-class-name: ${gmis.mysql.driverClassName}\r\n      url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n      db-type: mysql\r\n      initialSize: 10\r\n      minIdle: 10\r\n      maxActive: 500\r\n      max-wait: 60000\r\n      pool-prepared-statements: true\r\n      max-pool-prepared-statement-per-connection-size: 20\r\n      validation-query: SELECT \'x\'\r\n      test-on-borrow: false\r\n      test-on-return: false\r\n      test-while-idle: true\r\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n      filters: stat,wall\r\n      filter:\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            commentAllow: true\r\n            multiStatementAllow: true\r\n            noneBaseStatementAllow: true\r\n      # 从这里结束(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n\r\n      # 以下的2段配置，同时适用于所有模式\r\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\r\n        enabled: true\r\n        url-pattern: /*\r\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\r\n        session-stat-max-count: 1000\r\n        profile-enable: true\r\n        session-stat-enable: false\r\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\r\n        enabled: true\r\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\r\n        reset-enable: true    #允许清空统计数据\r\n        login-username: gmis\r\n        login-password: gmis\r\n  mvc:\r\n    static-path-pattern: /static/**\r\n  resources:\r\n    static-locations: classpath:/static/\r\n  freemarker:\r\n    templateLoaderPath: classpath:/templates/\r\n    suffix: .ftl\r\n    charset: UTF-8\r\n    request-context-attribute: request\r\n    settings:\r\n      number_format: 0.##       #解決freemarker数字输出中的逗号问题\r\n      #      classic_compatible: true  #默认情况变量为null则替换为空字符串，如果需要自定义，写上${empty!\"EmptyValue of fbysss\"}的形式即可\r\n      whitespace_stripping: true      # 剥离前后空字符串\r\n      boolean_format: true,false      # 布尔类型格式化\r\n      datetime_format: yyyy-MM-dd HH:mm:ss  # dateTime 类型格式化， 使用日期类型时， 需要在参数后追加 ?datetime eg: ${date?datetime}\r\n      date_format: yyyy-MM-dd   # date 类型格式化， 使用日期类型时， 需要在参数后追加 ?date eg: ${date?date}\r\n      time_format: HH:mm:ss      # time 类型格式化， 使用日期类型时， 需要在参数后追加 ?time eg: ${date?time}\r\n      template_exception_handler: ignore   # 忽略模版异常\r\n      default_encoding: UTF-8      # 默认编码\r\n      url_escaping_charset: UTF-8  # url 转义编码\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${gmis.redis.ip}\r\n    password: ${gmis.redis.password}\r\n    port: ${gmis.redis.port}\r\n    database: ${gmis.redis.database}\r\n\r\n#mybatis:\r\n#  mapper-locations: classpath:mybatis-mapper/*.xml\r\n\r\nmybatis-plus:\r\n  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml\r\n  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml\r\n  mapper-locations:\r\n    - classpath:mybatis-mapper/**/*Mapper.xml\r\n    - classpath*:mapper_**/**/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.xxl.job.admin.core.model;com.cdqckj.gmis.*.entity;com.cdqckj.gmis.database.mybatis.typehandler\r\n  typeEnumsPackage: com.cdqckj.gmis.*.enumeration\r\n  global-config:\r\n    db-config:\r\n      id-type: INPUT\r\n      insert-strategy: NOT_NULL\r\n      update-strategy: NOT_NULL\r\n      select-strategy: NOT_EMPTY\r\n  configuration:\r\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n    #配置JdbcTypeForNull, oracle数据库必须配置\r\n    jdbc-type-for-null: \'null\'\r\n\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  #  l2-cache-open: true\r\n  l2-cache-open: false     # 关闭二级缓存\r\n  #broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace:\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${gmis.redis.ip}:${gmis.redis.port}\r\n  password: ${gmis.redis.password}\r\n  database: 0\r\n  sentinelMasterId:\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000\r\n', 'c5b722cfd2ce727ea6b34f97d4c291cb', '2020-09-17 10:11:31', '2020-12-16 13:50:04', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'gmis-jobs-server', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (106, 'gmis-charges-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      charges:\r\n        title: 计费模块服务\r\n        base-package: com.cdqckj.gmis.calculate.controller\r\n\r\nserver:\r\n  port: 8785', 'e5372df9237b5d7b3227af178118ff66', '2020-09-22 11:50:58', '2021-01-30 15:37:42', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'gmis-charges-server', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (107, 'gmis-userarchive-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  injection:\r\n  # 是否启用 远程数据 手动注入\r\n  enabled: true\r\n  # 是否启用 远程数据 注解注入\r\n  aop-enabled: true\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      userarchive:\r\n        title: 用户档案模块\r\n        base-package: com.cdqckj.gmis.userarchive.controller\r\n      devicearchive:\r\n        title: 设备档案模块\r\n        base-package: com.cdqckj.gmis.devicearchive.controller\r\n      sim:\r\n        title: 卡表档案模块\r\n        base-package: com.cdqckj.gmis.sim.controller\r\n      nodearchive:\r\n        title: 节点档案模块\r\n        base-package: com.cdqckj.gmis.nodearchive.controller\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8769\r\n', '9418f28d3c4b9e5149513990fa3db1e5', '2020-09-22 11:53:54', '2020-09-22 11:53:54', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'gmis-userarchive-server', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (110, 'gmis-device-server.yml', 'DEFAULT_GROUP', '  gmis:\r\n    database:\r\n      isSeata: false\r\n      multiTenantType: DATASOURCE\r\n    swagger:\r\n      docket:\r\n        device:\r\n          title: 气表服务\r\n          base-package: com.cdqckj.gmis.gasmeter.controller\r\n        node:  \r\n          title: 节点服务\r\n          base-package: com.cdqckj.gmis.node.controller\r\n\r\n  logging:\r\n    io.seata: debug\r\n    org.springframework.cloud.alibaba.seata.web: debug\r\n\r\n\r\n  server:\r\n    port: 8788\r\n\r\n\r\n  ## 请在nacos中新建一个名为: gmis-device-server.yml 的配置文件，并将： gmis-device-server/src/main/resources/gmis-device-server.yml 配置文件的内容移动过去\r\n  ## 然后删除此文件！！！\r\n', 'd50037ec1a40252688cd6bd452081223', '2020-09-23 10:36:28', '2020-09-23 10:36:28', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'gmis-device-server', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (138, 'gmis-iot-qc-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      calculate:\r\n        title: 秦川物联网模块\r\n        base-package: com.cdqckj.gmis.iot.qc.controller\r\n  #传感系统3.0\r\n  iot:\r\n    baseAddress: http://222.212.93.70:50086/qnms/V1_0_0/\r\n    token_time: 1440\r\n    subscribe_cache_day: 2\r\n  #远传系统1.0\r\n  cis:\r\n    address: http://172.16.92.156:8760/api/iotQc/data/\r\n\r\n\r\nserver:\r\n  port: 8776', 'aaf4ed0e709432003c7312fb6714d0fa', '2020-10-08 13:52:52', '2020-10-13 20:56:56', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'gmis-iot-qc-server', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (144, 'transport.type', 'SEATA_GROUP', 'TCP', 'b136ef5f6a01d816991fe3cf7a6ac763', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (145, 'transport.server', 'SEATA_GROUP', 'NIO', 'b6d9dfc0fb54277321cebc0fff55df2f', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (146, 'transport.heartbeat', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (147, 'transport.enableClientBatchSendRequest', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (148, 'transport.threadFactory.bossThreadPrefix', 'SEATA_GROUP', 'NettyBoss', 'f8db59a3b7f2823f38a70c308361836', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (149, 'transport.threadFactory.workerThreadPrefix', 'SEATA_GROUP', 'NettyServerNIOWorker', 'a78ec7ef5d1631754c4e72ae8a3e9205', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (150, 'transport.threadFactory.serverExecutorThreadPrefix', 'SEATA_GROUP', 'NettyServerBizHandler', '11a36309f3d9df84fa8b59cf071fa2da', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (151, 'transport.threadFactory.shareBossWorker', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (152, 'transport.threadFactory.clientSelectorThreadPrefix', 'SEATA_GROUP', 'NettyClientSelector', 'cd7ec5a06541e75f5a7913752322c3af', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (153, 'transport.threadFactory.clientSelectorThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (154, 'transport.threadFactory.clientWorkerThreadPrefix', 'SEATA_GROUP', 'NettyClientWorkerThread', '61cf4e69a56354cf72f46dc86414a57e', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (155, 'transport.threadFactory.bossThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (156, 'transport.threadFactory.workerThreadSize', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (157, 'transport.shutdown.wait', 'SEATA_GROUP', '3', 'eccbc87e4b5ce2fe28308fd9f2a7baf3', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (158, 'service.default.grouplist', 'SEATA_GROUP', '127.0.0.1:8091', 'c32ce0d3e264525dcdada751f98143a3', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (159, 'service.enableDegrade', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (160, 'service.disableGlobalTransaction', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (161, 'client.rm.asyncCommitBufferLimit', 'SEATA_GROUP', '10000', 'b7a782741f667201b54880c925faec4b', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (162, 'client.rm.lock.retryInterval', 'SEATA_GROUP', '10', 'd3d9446802a44259755d38e6d163e820', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (163, 'client.rm.lock.retryTimes', 'SEATA_GROUP', '30', '34173cb38f07f89ddbebc2ac9128303f', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (164, 'client.rm.lock.retryPolicyBranchRollbackOnConflict', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (165, 'client.rm.reportRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (166, 'client.rm.tableMetaCheckEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (167, 'client.rm.sqlParserType', 'SEATA_GROUP', 'druid', '3d650fb8a5df01600281d48c47c9fa60', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (168, 'client.rm.reportSuccessEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (169, 'client.rm.sagaBranchRegisterEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (170, 'client.tm.commitRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (171, 'client.tm.rollbackRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (172, 'store.mode', 'SEATA_GROUP', 'db', 'd77d5e503ad1439f585ac494268b351b', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (173, 'store.file.dir', 'SEATA_GROUP', 'file_store/data', '6a8dec07c44c33a8a9247cba5710bbb2', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (174, 'store.file.maxBranchSessionSize', 'SEATA_GROUP', '16384', 'c76fe1d8e08462434d800487585be217', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (175, 'store.file.maxGlobalSessionSize', 'SEATA_GROUP', '512', '10a7cdd970fe135cf4f7bb55c0e3b59f', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (176, 'store.file.fileWriteBufferCacheSize', 'SEATA_GROUP', '16384', 'c76fe1d8e08462434d800487585be217', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (177, 'store.file.flushDiskMode', 'SEATA_GROUP', 'async', 'df93e34273b367bb63bad28c94c78d5', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (178, 'store.file.sessionReloadReadSize', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (179, 'store.db.datasource', 'SEATA_GROUP', 'druid', '3d650fb8a5df01600281d48c47c9fa60', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (180, 'store.db.dbType', 'SEATA_GROUP', 'mysql', '81c3b080dad537de7e10e0987a4bf52e', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (181, 'store.db.driverClassName', 'SEATA_GROUP', 'com.mysql.jdbc.Driver', '683cf0c3a5a56cec94dfac94ca16d760', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (182, 'store.db.url', 'SEATA_GROUP', 'jdbc:mysql://172.16.92.250:3306/gmis_seata?useUnicode=true', 'b418b5a572cc094dc76179fb5fa67627', '2020-10-14 11:10:57', '2020-12-28 02:35:42', NULL, '172.16.92.77', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', '', '', '', 'text', '');
INSERT INTO `config_info` VALUES (183, 'store.db.user', 'SEATA_GROUP', 'root', '63a9f0ea7bb98050796b649e85481845', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (184, 'store.db.password', 'SEATA_GROUP', '123456', 'e10adc3949ba59abbe56e057f20f883e', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (185, 'store.db.minConn', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (186, 'store.db.maxConn', 'SEATA_GROUP', '30', '34173cb38f07f89ddbebc2ac9128303f', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (187, 'store.db.globalTable', 'SEATA_GROUP', 'global_table', '8b28fb6bb4c4f984df2709381f8eba2b', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (188, 'store.db.branchTable', 'SEATA_GROUP', 'branch_table', '54bcdac38cf62e103fe115bcf46a660c', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (189, 'store.db.queryLimit', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (190, 'store.db.lockTable', 'SEATA_GROUP', 'lock_table', '55e0cae3b6dc6696b768db90098b8f2f', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (191, 'store.db.maxWait', 'SEATA_GROUP', '5000', 'a35fe7f7fe8217b4369a0af4244d1fca', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (192, 'server.recovery.committingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (193, 'server.recovery.asynCommittingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (194, 'server.recovery.rollbackingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (195, 'server.recovery.timeoutRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (196, 'server.maxCommitRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (197, 'server.maxRollbackRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (198, 'server.rollbackRetryTimeoutUnlockEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (199, 'client.undo.dataValidation', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (200, 'client.undo.logSerialization', 'SEATA_GROUP', 'jackson', 'b41779690b83f182acc67d6388c7bac9', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (201, 'server.undo.logSaveDays', 'SEATA_GROUP', '7', '8f14e45fceea167a5a36dedd4bea2543', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (202, 'server.undo.logDeletePeriod', 'SEATA_GROUP', '86400000', 'f4c122804fe9076cb2710f55c3c6e346', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (203, 'client.undo.logTable', 'SEATA_GROUP', 'undo_log', '2842d229c24afe9e61437135e8306614', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (204, 'client.log.exceptionRate', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (205, 'transport.serialization', 'SEATA_GROUP', 'seata', 'b943081c423b9a5416a706524ee05d40', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (206, 'transport.compressor', 'SEATA_GROUP', 'none', '334c4a4c42fdb79d7ebc3e73b517e6f8', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (207, 'metrics.enabled', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (208, 'metrics.registryType', 'SEATA_GROUP', 'compact', '7cf74ca49c304df8150205fc915cd465', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (209, 'metrics.exporterList', 'SEATA_GROUP', 'prometheus', 'e4f00638b8a10e6994e67af2f832d51c', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (210, 'metrics.exporterPrometheusPort', 'SEATA_GROUP', '9898', '7b9dc501afe4ee11c56a4831e20cee71', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (211, 'service.vgroupMapping.gmis_admin_seata_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2020-10-14 11:10:57', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (216, 'gmis-business-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      temporary:\r\n        title: 柜台临时服务模块\r\n        base-package: com.cdqckj.gmis.biztemporary.controller\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8771', 'c911334c8e2640a1be029c21bf2a9caa', '2020-12-11 18:29:55', '2020-12-11 18:40:04', NULL, '0:0:0:0:0:0:0:1', 'gmis-business-server', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'gmis-business-server.yml', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (239, 'common.yml', 'DEFAULT_GROUP', '# 在这里配置 所有的服务 和 所有环境 都相同的配置\r\n# 如果有个别服务，或者个别环境需要个性化配置， 只需要将配置，单独复制到指定的服务-${profiles.active}.yml即可\r\ngmis:\r\n  zipkin:\r\n    enabled: true\r\n  swagger:\r\n    license: Powered By gmis\r\n    licenseUrl: https://github.com/gmis\r\n    termsOfServiceUrl: https://github.com/gmis\r\n    version: 2.1\r\n    apiKeys:\r\n      - name: 令牌\r\n        keyname: token\r\n        passAs: header\r\n    global-operation-parameters:\r\n      - name: Authorization\r\n        description: 客户端信息\r\n        modelRef: String\r\n        parameterType: header\r\n        required: true\r\n        defaultValue: \"Basic enVpaG91X3VpOnp1aWhvdV91aV9zZWNyZXQ=\"\r\n      - name: tenant\r\n        description: 租户编码\r\n        modelRef: String\r\n        parameterType: header\r\n        required: true\r\n        defaultValue: \"MDAwMA==\"\r\n  injection:\r\n    # 是否启用 远程数据 手动注入\r\n    enabled: true\r\n    # 是否启用 远程数据 注解注入\r\n    aop-enabled: true\r\n    guavaCache:\r\n      enabled: true\r\n      maximumSize: 1000\r\n      refreshWriteTime: 10\r\n      refreshThreadPoolSize: 1000\r\n  security:\r\n    # 是否开启URI权限校验\r\n    enabled: true\r\n    type: FEIGN\r\n  scan:\r\n    type: FEIGN\r\n  log:\r\n    enabled: true\r\n    type: DB\r\n  context:\r\n    # 上下文拦截器\r\n    pathPatterns: \'/**\'\r\n    order: -20\r\n\r\n\r\nserver:\r\n  undertow: # jetty  undertow\r\n    io-threads: 8 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 120  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 2048  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\nspring:\r\n  messages:\r\n    basename: i18n/messages\r\n  zipkin:\r\n    sender:\r\n      type: RABBIT\r\n    enabled: ${gmis.zipkin.enabled}\r\n    discoveryClientEnabled: true\r\n    baseUrl: http://172.16.92.9:9411/  #http://gmis-zipkin:8772/\r\n    compression: # 压缩\r\n      enabled: true\r\n    locator: # 通过nacos动态获取地址\r\n      discovery:\r\n        enabled: true\r\n    rabbitmq: # 使用指定的队列\r\n      queue: gmis_zipkin\r\n  #被追踪的可能性，默认是0.1 表示百分之10\r\n  sleuth:\r\n    enabled: ${gmis.zipkin.enabled}\r\n    sampler:\r\n      probability: 1.0   # 采集率 1.0表示所有请求都采集， 生产线一般不会设置成1.0，影响效率\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 512MB      # Max file size，默认1M\r\n      max-request-size: 512MB   # Max request size，默认10M\r\n\r\ndozer:\r\n  mappingFiles:\r\n    - classpath*:dozer/*.dozer.xml\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n      enabled: true\r\n\r\nfeign:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  hystrix:\r\n    enabled: true   # feign 熔断机制是否开启\r\n    #支持压缩的mime types\r\n  compression:  # 请求压缩\r\n    request:\r\n      enabled: true\r\n      mime-types: text/xml,application/xml,application/json\r\n      min-request-size: 2048\r\n    response:  # 响应压缩\r\n      enabled: true\r\n\r\nribbon:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  ReadTimeout: 30000     #\r\n  ConnectTimeout: 30000  # [ribbon超时时间]大于[熔断超时],那么会先走熔断，相当于你配的ribbon超时就不生效了  ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n  MaxAutoRetries: 0             # 最大自动重试\r\n  MaxAutoRetriesNextServer: 1   # 最大自动像下一个服务重试\r\n  OkToRetryOnAllOperations: false  #无论是请求超时或者socket read timeout都进行重试，\r\n\r\n# 文件服务由于需要上传大文件，所以可以将超时时间测试大一些，其他服务超时时间是30s\r\ngmis-file-server:\r\n  ribbon:\r\n    ConnectTimeout: 300000\r\n    ReadTimeout: 300000\r\n\r\nhystrix:\r\n  threadpool:\r\n    default:\r\n      coreSize: 1000 # #并发执行的最大线程数，默认10\r\n      maxQueueSize: 1000 # #BlockingQueue的最大队列数\r\n      queueSizeRejectionThreshold: 5000 # #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝\r\n  command:\r\n    default:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 120000  # 熔断超时 ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n    gmis-file-server:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 1200000\r\n', '8eed4c546b283cd522619cb5b4504276', '2020-12-24 16:14:08', '2021-01-05 09:15:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (240, 'gmis-authority-server.yml', 'DEFAULT_GROUP', '# 在这里配置 权限服务 所有环境都能使用的配置\r\ngmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      auth:\r\n        title: 权限模块\r\n        base-package: com.cdqckj.gmis.authority.controller.auth\r\n      common:\r\n        title: 公共模块\r\n        base-package: com.cdqckj.gmis.authority.controller.common\r\n      core:\r\n        title: 组织模块\r\n        base-package: com.cdqckj.gmis.authority.controller.core\r\n      tenant:\r\n        title: 租户模块\r\n        base-package: com.cdqckj.gmis.tenant.controller\r\n\r\nserver:\r\n  port: 8764\r\n\r\n', 'de66af8329a56a162b69f4d4eb8ec1fb', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (241, 'gmis-demo-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      demo:\r\n        title: 演示服务\r\n        base-package: com.cdqckj.gmis.demo.controller\r\n\r\nserver:\r\n  port: 8770\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n', '83cdafb1b4396694feefd7e89058d199', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (242, 'gmis-file-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  nginx:\r\n    ip: ${spring.cloud.client.ip-address}   # 正式环境需要将该ip设置成nginx对应的 公网ip\r\n    port: 10000                             # 正式环境需要将该ip设置成nginx对应的 公网端口\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      file:\r\n        title: 文件服务\r\n        base-package: com.cdqckj.gmis.file.controller\r\n  file:\r\n    type: TENCENT_COS # LOCAL # FAST_DFS LOCAL\r\n    storage-path: /data/projects/uploadfile/file/     # 文件存储路径  （ 某些版本的 window 需要改成  D:\\\\data\\\\projects\\\\uploadfile\\\\file\\\\  ）\r\n    uriPrefix: http://${gmis.nginx.ip}:${gmis.nginx.port}/file/   # 文件访问 需要通过这个uri前缀进行访问\r\n    inner-uri-prefix: null  #  内网的url前缀\r\n    down-by-id: http://${gmis.nginx.ip}:${gmis.nginx.port}/api/file/attachment/download?ids[]=%s\r\n    down-by-biz-id: http://${gmis.nginx.ip}:${gmis.nginx.port}/api/file/attachment/download/biz?bizIds[]=%s\r\n    down-by-url: http://${gmis.nginx.ip}:${gmis.nginx.port}/api/file/attachment/download/url?url=%s&filename=%s\r\n    ali:\r\n      # 请填写自己的阿里云存储配置\r\n      uriPrefix: http://test.oss-cn-shenzhen.aliyuncs.com/\r\n      bucket-name: test\r\n      endpoint: http://oss-cn-shenzhen.aliyuncs.com\r\n      access-key-id: test\r\n      access-key-secret: test\r\n    tencent:\r\n      app-id: 1259370834\r\n      secret-id: AKIDD7oMaYmgqbu73myPJly4tSoujHtFLbOv\r\n      secret-key: g7JH0d1B9oCNaaT4RQAbl5b090kETRhc\r\n      regin-name: ap-chengdu\r\n      bucket-name: file-test-1259370834\r\n      path: https://file-test-1259370834.cos.ap-chengdu.myqcloud.com/\r\n\r\n#FAST_DFS配置\r\nfdfs:\r\n  soTimeout: 1500\r\n  connectTimeout: 600\r\n  thumb-image:\r\n    width: 150\r\n    height: 150\r\n  tracker-list:\r\n    - 192.168.1.2:22122\r\n  pool:\r\n    #从池中借出的对象的最大数目\r\n    max-total: 153\r\n    max-wait-millis: 102\r\n    jmx-name-base: 1\r\n    jmx-name-prefix: 1\r\n\r\n\r\nserver:\r\n  port: 8765\r\n', '97e5b9669464a67acb3fbaf77e9fcba2', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (243, 'gmis-gateway-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  log:\r\n    enabled: false\r\n\r\nspring:\r\n  autoconfigure:\r\n    # cao，升级到1.2.0后，gateway要排除这个依赖，排查了2个小时 2020年04月21日00:51:18\r\n    exclude: io.seata.integration.http.HttpAutoConfiguration\r\n  cloud:\r\n    gateway:\r\n      x-forwarded:\r\n        prefixEnabled: false\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n          lowerCaseServiceId: true\r\n      routes:\r\n        - id: oauth\r\n          uri: lb://gmis-oauth-server\r\n          predicates:\r\n            - Path=/oauth/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: file\r\n          uri: lb://gmis-file-server\r\n          predicates:\r\n            - Path=/file/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: authority\r\n          uri: lb://gmis-authority-server\r\n          predicates:\r\n            - Path=/authority/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: msgs\r\n          uri: lb://gmis-msgs-server\r\n          predicates:\r\n            - Path=/msgs/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: demo\r\n          uri: lb://gmis-demo-server\r\n          predicates:\r\n            - Path=/demo/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: order\r\n          uri: lb://gmis-order-server\r\n          predicates:\r\n            - Path=/order/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: pay\r\n          uri: lb://gmis-pay-server\r\n          predicates:\r\n            - Path=/pay/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'  \r\n        - id: configure\r\n          uri: lb://gmis-operateparam-server\r\n          predicates:\r\n            - Path=/operateparam/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: bizcenter\r\n          uri: lb://gmis-bizcenter-server\r\n          predicates:\r\n            - Path=/bizcenter/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: archive\r\n          uri: lb://gmis-userarchive-server\r\n          predicates:\r\n            - Path=/userarchive/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'          \r\n\r\n        - id: device\r\n          uri: lb://gmis-device-server\r\n          predicates:\r\n            - Path=/device/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'                        \r\n        - id: systemparam\r\n          uri: lb://gmis-systemparam-server\r\n          predicates:\r\n            - Path=/systemparam/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: readmeter\r\n          uri: lb://gmis-readmeter-server\r\n          predicates:\r\n            - Path=/readmeter/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: offlinepay\r\n          uri: lb://gmis-offlinepay-server\r\n          predicates:\r\n            - Path=/offlinepay/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: install\r\n          uri: lb://gmis-install-server\r\n          predicates:\r\n            - Path=/install/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: biztemporary\r\n          uri: lb://gmis-business-temporary\r\n          predicates:\r\n            - Path=/biztemporary/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: securitycheck\r\n          uri: lb://gmis-security-check\r\n          predicates:\r\n            - Path=/securitycheck/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: operation\r\n          uri: lb://gmis-operation\r\n          predicates:\r\n            - Path=/operation/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: admincenter\r\n          uri: lb://gmis-admincenter-server\r\n          predicates:\r\n            - Path=/admincenter/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'      \r\n        - id: charges\r\n          uri: lb://gmis-charges-server\r\n          predicates:\r\n            - Path=/charges/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'  \r\n        - id: operationcenter\r\n          uri: lb://gmis-operationcenter-server\r\n          predicates:\r\n            - Path=/operationcenter/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: iotQc\r\n          uri: lb://gmis-iot-qc-server\r\n          predicates:\r\n            - Path=/iotQc/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'           \r\nserver:\r\n  port: 8760\r\n  servlet:\r\n    context-path: /api  # = server.servlet.context-path', 'edd93f00f44a4d15947bc910a9ae1c21', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (244, 'gmis-monitor.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 8762\r\n  servlet:\r\n    context-path: /${spring.application.name}   # 监控系统项目名\r\n\r\nturbine:\r\n  stream:\r\n    port: 8763\r\n\r\nspring:\r\n  #  mail:\r\n  #    host: smtp.163.com\r\n  #    username: adadminfocus@163.com\r\n  #    password: adsugar123\r\n  #    properties:\r\n  #      smtp:\r\n  #        auth: true\r\n  #        starttls:\r\n  #          enable: true\r\n  #          required: true\r\n  boot:\r\n    admin:\r\n      routes:\r\n        endpoints: env,metrics,dump,jolokia,prometheus,info,configprops,trace,logfile,refresh,flyway,liquibase,heapdump,loggers,auditevents,hystrix.stream\r\n      turbine:\r\n        clusters: default\r\n        location: http://${gmis.local-ip}:${turbine.stream.port}${server.servlet.context-path}\r\n  #      context-path: ${management.context-path}\r\n  #      notify:\r\n  #        mail:\r\n  #          to: 604141215@qq.com\r\n  #          from: adadminfocus@163.com\r\n  #          ignore-changes: UNKNOWN:UP\r\n  security:\r\n    user:\r\n      name: gmis\r\n      password: gmis\r\n      roles: USER\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n      enabled: true\r\n', 'b063560a14ee6fee3df7cc21d0bdf770', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (245, 'gmis-msgs-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      sms:\r\n        title: 短信模块\r\n        base-package: com.cdqckj.gmis.sms.controller\r\n      msgs:\r\n        title: 消息模块\r\n        base-package: com.cdqckj.gmis.msgs.controller\r\n      mail:\r\n        title: 邮件模块\r\n        base-package: com.cdqckj.gmis.mail.controller\r\n  cache:\r\n    type: REDIS   # CAFFEINE\r\n    def:\r\n      keyPrefix: ${spring.profiles.active}\r\n    configs:\r\n      gmis:\r\n        timeToLive: 1h\r\n        keyPrefix: aaa\r\n      test:\r\n        timeToLive: 2h\r\n  provider:\r\n    type: TENCENT\r\n    tencent:\r\n      app-id: 1400408010\r\n      app-secret: 4ef417bd89ccb49a876f6f698940bb4d\r\n      secret-id: AKIDD7oMaYmgqbu73myPJly4tSoujHtFLbOv\r\n      secret-key: g7JH0d1B9oCNaaT4RQAbl5b090kETRhc\r\n      regin-name: ap-chengdu\r\n      bucket-name: file-test-1259370834\r\n      path: https://file-test-1259370834.cos.ap-chengdu.myqcloud.com/\r\nserver:\r\n  port: 8768', '84384ae2778e77c3406822c9aef46a66', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (246, 'gmis-oauth-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 8773\r\n\r\ngmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    enabled: true\r\n    title: 认证服务\r\n    base-package: com.cdqckj.gmis\r\n\r\n\r\nauthentication:\r\n  expire: 28800               # token有效期为8小时\r\n  refreshExpire: 86400        # 刷新token有效期为24小时\r\n', '927824a6c7b803178fb9b6bb135516be', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (247, 'gmis-order-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      order:\r\n        title: 演示服务\r\n        base-package: com.cdqckj.gmis.order.controller\r\n\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\n\r\nserver:\r\n  port: 8769\r\n', 'e9684e3263de9835915c9c884a7e7b6e', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (248, 'gmis-zuul-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  swagger:\r\n    enabled: true\r\n    title: 网关模块\r\n    base-package: com.cdqckj.gmis.zuul.controller\r\n  log:\r\n    enabled: false\r\n\r\nspring:\r\n  mvc:\r\n    servlet:\r\n      path: /gate\r\n\r\nserver:\r\n  port: 8760\r\n  servlet:\r\n    context-path: /api  # = server.servlet.context-path\r\n\r\nzuul:\r\n  # 一些比较敏感的请求头，不想通过zuul传递过去， 可以通过该属性进行设置\r\n  sensitiveHeaders: \'\'\r\n  #添加代理头\r\n  add-proxy-headers: true\r\n  #  debug:\r\n  #    request: true\r\n  #  include-debug-header: true\r\n  retryable: false\r\n  servlet-path: /         # 默认是/zuul , 上传文件需要加/zuul前缀才不会出现乱码，这个改成/ 即可不加前缀\r\n  ignored-services: \"*\"   # 忽略eureka上的所有服务\r\n  #  prefix: /api #为zuul设置一个公共的前缀\r\n  #  strip-prefix: false     #对于代理前缀默认会被移除   故加入false  表示不要移除\r\n  routes:  # 路由配置方式\r\n    authority:  # 其中 authority 是路由名称，可以随便定义，但是path和service-id需要一一对应\r\n      path: /authority/**\r\n      serviceId: gmis-authority-server\r\n    oauth:\r\n      path: /oauth/**\r\n      serviceId: gmis-oauth-server\r\n    file:\r\n      path: /file/**\r\n      serviceId: gmis-file-server\r\n    msgs:\r\n      path: /msgs/**\r\n      serviceId: gmis-msgs-server\r\n    order:\r\n      path: /order/**\r\n      serviceId: gmis-order-server\r\n    demo:\r\n      path: /demo/**\r\n      serviceId: gmis-demo-server\r\n    sysConf:\r\n      path: /sysConf/**\r\n      serviceId: gmis-sysConf-server\r\n    systemparam:\r\n      path: /systemparam/**\r\n      serviceId: gmis-systemparam-server', '9efaa14445337a1afbd72441f34de184', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (249, 'mysql.yml', 'DEFAULT_GROUP', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到gmis-authority-server-dev.yml中将数据库名和ip改掉\r\ngmis:\r\n  seata:\r\n    ip: ${SEATA_IP:172.16.92.250}\r\n    port: ${SEATA_PORT:8091}\r\n    namespace: ${SEATA_ID:3cca7d98-3b1c-44d3-90e5-86abaaf0048a}\r\n  mysql:\r\n    ip: 172.16.92.250\r\n    port: 3306\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    database: gmis_defaults\r\n    username: root\r\n    password: 123456\r\n    url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n  database:      # 数据库配置请看DatabaseProperties类上的注释\r\n    isNotWrite: false\r\n    tenantDatabasePrefix: gmis_base\r\n    multiTenantType: DATASOURCE\r\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\r\n    worker-id: 0\r\n    data-center-id: 0\r\n    isSeata: true\r\n\r\n# mysql 通用配置\r\nspring:\r\n  datasource:\r\n    # 从这里开始(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    dynamic:\r\n      enabled: false  # 这里一定要写成false， 是否开启根据 gmis.database.multiTenantType 来决定\r\n      p6spy: true\r\n      seata: ${gmis.database.isSeata:false}\r\n      druid:\r\n        initialSize: 4\r\n        minIdle: 4\r\n        maxActive: 10\r\n        max-wait: 60000\r\n        pool-prepared-statements: true\r\n        max-pool-prepared-statement-per-connection-size: 20\r\n        validation-query: SELECT \'x\'\r\n        test-on-borrow: false\r\n        test-on-return: false\r\n        test-while-idle: true\r\n        time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n        min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n        filters: stat,wall\r\n        wall:\r\n          comment-allow: true\r\n          multiStatementAllow: true\r\n          noneBaseStatementAllow: true\r\n      datasource:\r\n        master:       # 默认的数据源\r\n          username: ${gmis.mysql.username}\r\n          password: ${gmis.mysql.password}\r\n          driver-class-name: ${gmis.mysql.driverClassName}\r\n          url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n          db-type: mysql\r\n    # 从这里结束(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    druid:\r\n      enable: true\r\n      # 从这里开始(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n      username: ${gmis.mysql.username}\r\n      password: ${gmis.mysql.password}\r\n      driver-class-name: ${gmis.mysql.driverClassName}\r\n      url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n      db-type: mysql\r\n      initialSize: 4\r\n      minIdle: 4\r\n      maxActive: 10\r\n      max-wait: 60000\r\n      pool-prepared-statements: true\r\n      max-pool-prepared-statement-per-connection-size: 20\r\n      validation-query: SELECT \'x\'\r\n      test-on-borrow: false\r\n      test-on-return: false\r\n      test-while-idle: true\r\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n      filters: stat,wall\r\n      filter:\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            commentAllow: true\r\n            multiStatementAllow: true\r\n            noneBaseStatementAllow: true\r\n      # 从这里结束(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n\r\n      # 以下的2段配置，同时适用于所有模式\r\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\r\n        enabled: true\r\n        url-pattern: /*\r\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\r\n        session-stat-max-count: 1000\r\n        profile-enable: true\r\n        session-stat-enable: false\r\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\r\n        enabled: true\r\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\r\n        reset-enable: true    #允许清空统计数据\r\n        login-username: gmis\r\n        login-password: gmis\r\n\r\nmybatis-plus:\r\n  mapper-locations:\r\n    - classpath*:mapper_**/**/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.cdqckj.gmis.*.entity;com.cdqckj.gmis.database.mybatis.typehandler\r\n  typeEnumsPackage: com.cdqckj.gmis.*.enumeration\r\n  global-config:\r\n    db-config:\r\n      id-type: INPUT\r\n      insert-strategy: NOT_NULL\r\n      update-strategy: NOT_NULL\r\n      select-strategy: NOT_EMPTY\r\n  configuration:\r\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n    #配置JdbcTypeForNull, oracle数据库必须配置\r\n    jdbc-type-for-null: \'null\'\r\n\r\n# 分布式事务相关\r\nseata:\r\n  enabled: ${gmis.database.isSeata}\r\n  enableAutoDataSourceProxy: true\r\n  tx-service-group: gmis_admin_seata_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: ${gmis.nacos.ip}:${gmis.nacos.port}\r\n      username: ${gmis.nacos.username}\r\n      password: ${gmis.nacos.password}\r\n      namespace: ${gmis.seata.namespace}\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: ${gmis.nacos.ip}:${gmis.nacos.port}\r\n      username: ${gmis.nacos.username}\r\n      password: ${gmis.nacos.password}\r\n      namespace: ${gmis.seata.namespace}\r\n  service:\r\n    grouplist:\r\n      default: ${gmis.seata.ip:}:${gmis.seata.port:}\r\n    vgroup-mapping:\r\n      gmis_admin_seata_tx_group: default\r\n    disable-global-transaction: false\r\n  client:\r\n    rm:\r\n      report-success-enable: false\r\n', 'f4d8f0ab73238a3c1385be01f808d03', '2020-12-24 16:14:08', '2020-12-30 15:19:19', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (250, 'rabbitmq.yml', 'DEFAULT_GROUP', 'gmis:\r\n  rabbitmq:\r\n    # 若系统中有除了zipkin之外的地方使用了mq ，则一定不能设置成false\r\n    enabled: true\r\n    ip: 172.16.92.250\r\n    port: 5672\r\n    username: gmis\r\n    password: gmis\r\n\r\nspring:\r\n  rabbitmq:\r\n    enabled: ${gmis.rabbitmq.enabled}\r\n    host: ${gmis.rabbitmq.ip}\r\n    port: ${gmis.rabbitmq.port}\r\n    username: ${gmis.rabbitmq.username}\r\n    password: ${gmis.rabbitmq.password}\r\n    listener:\r\n      type: direct # simple direct\r\n', '7439518b469dac8795619d662c2a9927', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (251, 'redis.yml', 'DEFAULT_GROUP', '# redis 通用配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到gmis-authority-server-dev.yml中将数据库名和ip改掉\r\ngmis:\r\n  redis:\r\n    ip: 172.16.92.250\r\n    #ip: 127.0.0.1\r\n    port: 6379\r\n    password: \'\'\r\n    database: 0\r\n\r\nspring:\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${gmis.redis.ip}\r\n    password: ${gmis.redis.password}\r\n    port: ${gmis.redis.port}\r\n    database: ${gmis.redis.database}\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  # l2-cache-open: true\r\n  l2-cache-open: false     # 关闭二级缓存\r\n  # broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace: \'\'\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${gmis.redis.ip}:${gmis.redis.port}\r\n  password: ${gmis.redis.password}\r\n  database: ${gmis.redis.database}\r\n  sentinelMasterId: \'\'\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000\r\n', '6d92b834874d29c87fcb811f1237092a', '2020-12-24 16:14:08', '2021-01-05 09:18:52', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (252, 'gmis-systemparam-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      systemparamNew:\r\n        title: 系统参数配置服务\r\n        base-package: com.cdqckj.gmis.systemparamNew.controller\r\n      demo:\r\n        title: 演示服务\r\n        base-package: com.cdqckj.gmis.demo.controller\r\nribbon:\r\n  eureka:\r\n    enabled: true\r\nserver:\r\n  port: 8774\r\n\r\n\r\n## 请在nacos中新建一个名为: gmis-systemparam-server.yml 的配置文件，并将： gmis-systemparam-server/src/main/resources/gmis-systemparam-server.yml 配置文件的内容移动过去\r\n## 然后删除此文件！！！\r\n', 'b925c4835af4093745dc15ba62375274', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (253, 'gmis-operateparam-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      operateparam:\r\n        title: 运营配置模块\r\n        base-package: com.cdqckj.gmis.operateparam.controller\r\n      systemparam:\r\n        title: 系统配置模块\r\n        base-package: com.cdqckj.gmis.systemparam.controller\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8770\r\n', '72c60c674c31d21853fb5af54aa8cc64', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (254, 'gmis-bizcenter-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      configure:\r\n        title: 运营配置模块\r\n        base-package: com.cdqckj.gmis.bizcenter.operation.config.controller\r\n      device:\r\n        title: 设备服务模块\r\n        base-package: com.cdqckj.gmis.bizcenter.device.archives.controller\r\n      systemparam:\r\n        title: 系统配置模块\r\n        base-package: com.cdqckj.gmis.bizcenter.sys.config.controller\r\n      userarchive:\r\n        title: 客户档案模块\r\n        base-package: com.cdqckj.gmis.bizcenter.customer.archives.controller\r\n      devicearchive:\r\n        title: 设备档案模块\r\n        base-package: com.cdqckj.gmis.bizcenter.device.archives.controller\r\n      install:\r\n        title: 报装模块\r\n        base-package: com.cdqckj.gmis.bizcenter.installed.controller\r\n      securityed:\r\n        title: 安检模块\r\n        base-package: com.cdqckj.gmis.bizcenter.securitycheckrecord.controller\r\n      operation:\r\n        title: 运行维护模块\r\n        base-package: com.cdqckj.gmis.bizcenter.operation.controller \r\n      tempcounter:\r\n        title: 临时综合\r\n        base-package: com.cdqckj.gmis.bizcenter.temp.counter.controller\r\n      charges:\r\n        title: 收费模块\r\n        base-package: com.cdqckj.gmis.bizcenter.charges.controller\r\n      readmeter:\r\n        title: 抄表服务\r\n        base-package: com.cdqckj.gmis.bizcenter.read.meter.controller\r\n      dailycounter:\r\n        title: 日常综合\r\n        base-package: com.cdqckj.gmis.bizcenter.daily.counter.controller\r\n      bill:\r\n        title: 票据发票\r\n        base-package: com.cdqckj.gmis.bizcenter.invoice.controller\r\n      adjustprice:\r\n        title: 调价补差\r\n        base-package: com.cdqckj.gmis.bizcenter.adjust.price.controller\r\n      sts:\r\n        title: 统计模块\r\n        base-package: com.cdqckj.gmis.bizcenter.sts.cotroller\r\n      iot:\r\n        title: 远传表模块\r\n        base-package: com.cdqckj.gmis.bizcenter.iot.controller\r\n      card:\r\n        title: ICID卡\r\n        base-package:  com.cdqckj.gmis.bizcenter.card.controller\r\n      summaryBill:\r\n        title: 扎帐\r\n        base-package: com.cdqckj.gmis.bizcenter.summary.bill.controller    \r\n      \r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8802\r\n', '401ede8d4b6e30c5ac53c375758faac0', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (255, 'gmis-readmeter-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      readmeter:\r\n        title: 抄表服务\r\n        base-package: com.cdqckj.gmis.readmeter.controller\r\n\r\nserver:\r\n  port: 8774\r\n\r\n\r\n## 请在nacos中新建一个名为: gmis-readmeter-server.yml 的配置文件，并将： gmis-readmeter-server/src/main/resources/gmis-readmeter-server.yml 配置文件的内容移动过去\r\n## 然后删除此文件！！！', '4c74664c0b3733b81adc7adbbf9cdf8b', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (256, 'gmis-pay-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n       pay:\r\n        title: 支付服务\r\n        base-package: com.cdqckj.gmis.pay.controller\r\n\r\nserver:\r\n  port: 8781\r\n\r\nspring:\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        metadata:\r\n          grayversion: 1.0', '82ca606aa82d24d6b705f60c422fc1d3', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (257, 'gmis-offlinepay-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  swagger:\r\n    docket:\r\n      offlinepay:\r\n        title: 线下支付服务服务\r\n        base-package: com.cdqckj.gmis.offlinepay.controller\r\nserver:\r\n  port: 8782', 'afdcf7786e244f05297ff02b96fe216', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (258, 'gmis-onlinepay-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n       pay:\r\n        title: 支付服务\r\n        base-package: com.cdqckj.gmis.pay.controller\r\n  service:\r\n    appId: wx5408d1ddde603ba9\r\n    mchId: 1603115705\r\n    apiKey: LIUSHI123456789LIUSHI12345678912\r\n    defaultUrl: http://weixinpaytest.free.idcfengye.com/pay/onlinepay/notify\r\n    refundUrl: http://weixinpaytest.free.idcfengye.com/pay/onlinepay/refundNotify\r\n    apiV3key: e1dea31d334f48948313d90ac71efabb\r\n    mchSerialNo: 2339B893C2371AC03D7EB6A56840AFEB595F1C8E\r\n    appSubAppid: \"\"\r\n    appletSubAppid: \"\" \r\nserver:\r\n  port: 8781\r\n\r\nspring:\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        metadata:\r\n          grayversion: 1.0', '754366b55c903b8ea7132b4c1f18cbfe', '2020-12-24 16:14:08', '2021-01-11 13:26:01', NULL, '172.16.92.34', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (259, 'gmis-calculate-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      calculate:\r\n        title: 燃气计费服务服务\r\n        base-package: com.cdqckj.gmis.calculate.controller\r\n\r\nserver:\r\n  port: 8786\r\n\r\n\r\n## 请在nacos中新建一个名为: gmis-calculate-server.yml 的配置文件，并将： gmis-calculate-server/src/main/resources/gmis-calculate-server.yml 配置文件的内容移动过去\r\n## 然后删除此文件！！！', '5a69931d2a09a7db780715629ad24c15', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', 'gmis-calculate-server', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (260, 'gmis-bizjobcenter-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      bizjobcenter:\r\n        title: 调度聚合服务服务\r\n        base-package: com.cdqckj.gmis.bizjobcenter.controller\r\n\r\nserver:\r\n  port: 8804', '6594a0514dd62ea9b6db3f030c59c6ed', '2020-12-24 16:14:08', '2020-12-28 11:13:16', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (261, 'gmis-executor-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  seata:\r\n    ip: ${SEATA_IP:172.16.92.250}\r\n    port: ${SEATA_PORT:8091}\r\n    namespace: ${SEATA_ID:3cca7d98-3b1c-44d3-90e5-86abaaf0048a}\r\n  mysql:\r\n    ip: ${MYSQL_IP:172.16.92.250}\r\n    port: 3306\r\n    username: root\r\n    password: 123456\r\n    database: gmis_defaults\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n  redis:\r\n    ip: 172.16.92.250\r\n    port: 6379\r\n    database: 0\r\n    password: \'\'\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n    tenantDatabasePrefix: gmis_base\r\n    isBlockAttack: false\r\n    worker-id: 0\r\n    data-center-id: 0\r\n\r\n### xxl-job email\r\nxxl.job:\r\n  accessToken:\r\n  # 以下是client 执行器端配置（注意：若不想配置调度器也是执行器，请自行参考xxl）\r\n  admin:\r\n    addresses: http://${JOBS_IP:172.16.92.250}:${JOBS_PORT:8767}/gmis-jobs-server\r\n  executor:\r\n    appname: ${spring.application.name}\r\n    ip: ${EXECUTOR_IP:172.16.92.250}\r\n    port: ${EXECUTOR_PORT:8775}\r\n    registryLazy: 10000  # 延迟10秒注册，防止首次启动报错\r\n    logpath: ${logging.file.path}/${spring.application.name}/\r\n    logretentiondays: -1\r\n\r\nserver:\r\n  servlet:\r\n    context-path: /${spring.application.name}\r\n  port: 8875\r\n  undertow: # jetty  undertow\r\n    io-threads: 4 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 80  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 1024  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\n# mysql 通用配置\r\nspring:\r\n  profiles:\r\n    active: dev\r\n  datasource:\r\n    # 从这里开始(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    dynamic:\r\n      enabled: false  # 这里一定要写成false， 是否开启根据 gmis.database.multiTenantType 来决定\r\n      p6spy: true\r\n      seata: ${gmis.database.isSeata:false}\r\n      druid:\r\n        initialSize: 10\r\n        minIdle: 10\r\n        maxActive: 500\r\n        max-wait: 60000\r\n        pool-prepared-statements: true\r\n        max-pool-prepared-statement-per-connection-size: 20\r\n        validation-query: SELECT \'x\'\r\n        test-on-borrow: false\r\n        test-on-return: false\r\n        test-while-idle: true\r\n        time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n        min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n        filters: stat,wall\r\n        wall:\r\n          comment-allow: true\r\n          multiStatementAllow: true\r\n          noneBaseStatementAllow: true\r\n      datasource:\r\n        master:\r\n          username: ${gmis.mysql.username}\r\n          password: ${gmis.mysql.password}\r\n          driver-class-name: ${gmis.mysql.driverClassName}\r\n          url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n          db-type: mysql\r\n    # 从这里结束(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    druid:\r\n      enable: true\r\n      # 从这里开始(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n      username: ${gmis.mysql.username}\r\n      password: ${gmis.mysql.password}\r\n      driver-class-name: ${gmis.mysql.driverClassName}\r\n      url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n      db-type: mysql\r\n      initialSize: 10\r\n      minIdle: 10\r\n      maxActive: 500\r\n      max-wait: 60000\r\n      pool-prepared-statements: true\r\n      max-pool-prepared-statement-per-connection-size: 20\r\n      validation-query: SELECT \'x\'\r\n      test-on-borrow: false\r\n      test-on-return: false\r\n      test-while-idle: true\r\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n      filters: stat,wall\r\n      filter:\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            commentAllow: true\r\n            multiStatementAllow: true\r\n            noneBaseStatementAllow: true\r\n      # 从这里结束(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n\r\n      # 以下的2段配置，同时适用于所有模式\r\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\r\n        enabled: true\r\n        url-pattern: /*\r\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\r\n        session-stat-max-count: 1000\r\n        profile-enable: true\r\n        session-stat-enable: false\r\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\r\n        enabled: true\r\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://172.16.92.250:9000/druid/index.html\r\n        reset-enable: true    #允许清空统计数据\r\n        login-username: gmis\r\n        login-password: gmis\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${gmis.redis.ip}\r\n    password: ${gmis.redis.password}\r\n    port: ${gmis.redis.port}\r\n    database: ${gmis.redis.database}\r\n\r\n#mybatis:\r\n#  mapper-locations: classpath:mybatis-mapper/*.xml\r\n\r\nmybatis-plus:\r\n  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml\r\n  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml\r\n  mapper-locations:\r\n    - classpath:mybatis-mapper/**/*Mapper.xml\r\n    - classpath*:mapper_**/**/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.xxl.job.admin.core.model;com.cdqckj.gmis.*.entity;com.cdqckj.gmis.database.mybatis.typehandler\r\n  typeEnumsPackage: com.cdqckj.gmis.*.enumeration\r\n  global-config:\r\n    db-config:\r\n      id-type: INPUT\r\n      insert-strategy: NOT_NULL\r\n      update-strategy: NOT_NULL\r\n      select-strategy: NOT_EMPTY\r\n  configuration:\r\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n    #配置JdbcTypeForNull, oracle数据库必须配置\r\n    jdbc-type-for-null: \'null\'\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  #  l2-cache-open: true\r\n  l2-cache-open: false     # 关闭二级缓存\r\n  #broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace:\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${gmis.redis.ip}:${gmis.redis.port}\r\n  password: ${gmis.redis.password}\r\n  database: 0\r\n  sentinelMasterId:\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000\r\n', '623497daab067418398729b4aa65a287', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (262, 'gmis-jobs-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  rabbitmq:\r\n    # 若系统中有除了zipkin之外的地方使用了mq ，则一定不能设置成false\r\n    enabled: true\r\n    ip: 172.16.92.250\r\n    port: 5672\r\n    username: gmis\r\n    password: gmis\r\n  mysql:\r\n    ip: ${MYSQL_IP:172.16.92.250}\r\n    port: 3306\r\n    username: root\r\n    password: 123456\r\n    database: gmis_defaults\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n  redis:\r\n    ip: 172.16.92.250\r\n    port: 6379\r\n    database: 0\r\n    password: \'\'\r\n  database:\r\n    multiTenantType: DATASOURCE\r\n    tenantDatabasePrefix: gmis_base\r\n    isBlockAttack: false\r\n    worker-id: 0\r\n    data-center-id: 0\r\n\r\n### xxl-job email\r\nxxl.job:\r\n  mail:\r\n    host: smtp.163.com\r\n    port: 25\r\n    ssl: false\r\n    username: ovono802302@163.com\r\n    password: asdfzxcv\r\n    sendNick: 《任务调度平台gmis-JOB》\r\n  login:\r\n    username: admin\r\n    password: admin\r\n  accessToken:\r\n  i18n:\r\n  # 以下是client 执行器端配置（注意：若不想配置调度器也是执行器，请自行参考xxl）\r\n  admin:\r\n    addresses: http://172.16.92.250:${server.port}/${spring.application.name}\r\n  executor:\r\n    appname: ${spring.application.name}\r\n    ip: ${EXECUTOR_IP:172.16.92.250}\r\n    port: ${EXECUTOR_PORT:8871}\r\n    registryLazy: 10000  # 延迟10秒注册，防止首次启动报错\r\n    logpath: ${logging.file.path}/${spring.application.name}/\r\n    logretentiondays: -1\r\n\r\n\r\nserver:\r\n  servlet:\r\n    context-path: /${spring.application.name}\r\n  port: 8767\r\n  undertow: # jetty  undertow\r\n    io-threads: 4 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 80  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 1024  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\n\r\n# mysql 通用配置\r\nspring:\r\n  profiles:\r\n    active: dev\r\n  datasource:\r\n    # 从这里开始(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    dynamic:\r\n      enabled: false  # 这里一定要写成false， 是否开启根据 gmis.database.multiTenantType 来决定\r\n      p6spy: true\r\n      druid:\r\n        initialSize: 10\r\n        minIdle: 10\r\n        maxActive: 500\r\n        max-wait: 60000\r\n        pool-prepared-statements: true\r\n        max-pool-prepared-statement-per-connection-size: 20\r\n        validation-query: SELECT \'x\'\r\n        test-on-borrow: false\r\n        test-on-return: false\r\n        test-while-idle: true\r\n        time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n        min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n        filters: stat,wall\r\n        wall:\r\n          comment-allow: true\r\n          multiStatementAllow: true\r\n          noneBaseStatementAllow: true\r\n      datasource:\r\n        master:\r\n          username: ${gmis.mysql.username}\r\n          password: ${gmis.mysql.password}\r\n          driver-class-name: ${gmis.mysql.driverClassName}\r\n          url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n          db-type: mysql\r\n    # 从这里结束(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    druid:\r\n      enable: true\r\n      # 从这里开始(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n      username: ${gmis.mysql.username}\r\n      password: ${gmis.mysql.password}\r\n      driver-class-name: ${gmis.mysql.driverClassName}\r\n      url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n      db-type: mysql\r\n      initialSize: 10\r\n      minIdle: 10\r\n      maxActive: 500\r\n      max-wait: 60000\r\n      pool-prepared-statements: true\r\n      max-pool-prepared-statement-per-connection-size: 20\r\n      validation-query: SELECT \'x\'\r\n      test-on-borrow: false\r\n      test-on-return: false\r\n      test-while-idle: true\r\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n      filters: stat,wall\r\n      filter:\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            commentAllow: true\r\n            multiStatementAllow: true\r\n            noneBaseStatementAllow: true\r\n      # 从这里结束(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n\r\n      # 以下的2段配置，同时适用于所有模式\r\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\r\n        enabled: true\r\n        url-pattern: /*\r\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\r\n        session-stat-max-count: 1000\r\n        profile-enable: true\r\n        session-stat-enable: false\r\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\r\n        enabled: true\r\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://172.16.92.250:9000/druid/index.html\r\n        reset-enable: true    #允许清空统计数据\r\n        login-username: gmis\r\n        login-password: gmis\r\n  mvc:\r\n    static-path-pattern: /static/**\r\n  resources:\r\n    static-locations: classpath:/static/\r\n  freemarker:\r\n    templateLoaderPath: classpath:/templates/\r\n    suffix: .ftl\r\n    charset: UTF-8\r\n    request-context-attribute: request\r\n    settings:\r\n      number_format: 0.##       #解決freemarker数字输出中的逗号问题\r\n      #      classic_compatible: true  #默认情况变量为null则替换为空字符串，如果需要自定义，写上${empty!\"EmptyValue of fbysss\"}的形式即可\r\n      whitespace_stripping: true      # 剥离前后空字符串\r\n      boolean_format: true,false      # 布尔类型格式化\r\n      datetime_format: yyyy-MM-dd HH:mm:ss  # dateTime 类型格式化， 使用日期类型时， 需要在参数后追加 ?datetime eg: ${date?datetime}\r\n      date_format: yyyy-MM-dd   # date 类型格式化， 使用日期类型时， 需要在参数后追加 ?date eg: ${date?date}\r\n      time_format: HH:mm:ss      # time 类型格式化， 使用日期类型时， 需要在参数后追加 ?time eg: ${date?time}\r\n      template_exception_handler: ignore   # 忽略模版异常\r\n      default_encoding: UTF-8      # 默认编码\r\n      url_escaping_charset: UTF-8  # url 转义编码\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${gmis.redis.ip}\r\n    password: ${gmis.redis.password}\r\n    port: ${gmis.redis.port}\r\n    database: ${gmis.redis.database}\r\n\r\n#mybatis:\r\n#  mapper-locations: classpath:mybatis-mapper/*.xml\r\n\r\nmybatis-plus:\r\n  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml\r\n  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml\r\n  mapper-locations:\r\n    - classpath:mybatis-mapper/**/*Mapper.xml\r\n    - classpath*:mapper_**/**/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.xxl.job.admin.core.model;com.cdqckj.gmis.*.entity;com.cdqckj.gmis.database.mybatis.typehandler\r\n  typeEnumsPackage: com.cdqckj.gmis.*.enumeration\r\n  global-config:\r\n    db-config:\r\n      id-type: INPUT\r\n      insert-strategy: NOT_NULL\r\n      update-strategy: NOT_NULL\r\n      select-strategy: NOT_EMPTY\r\n  configuration:\r\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n    #配置JdbcTypeForNull, oracle数据库必须配置\r\n    jdbc-type-for-null: \'null\'\r\n\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  #  l2-cache-open: true\r\n  l2-cache-open: false     # 关闭二级缓存\r\n  #broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace:\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${gmis.redis.ip}:${gmis.redis.port}\r\n  password: ${gmis.redis.password}\r\n  database: 0\r\n  sentinelMasterId:\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000\r\n', 'ace52bcf6f10149968023782e0788fbb', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (263, 'gmis-charges-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  swagger:\r\n    docket:\r\n      charges:\r\n        title: 收费模块服务\r\n        base-package: com.cdqckj.gmis.charges.controller\r\n      caculate:\r\n        title: 计费服务\r\n        base-package: com.cdqckj.gmis.calculate.controller\r\nspring:\r\n  # 资源信息\r\n  messages:\r\n    # 国际化资源文件路径\r\n    basename: i18n/messages,i18n/common/messages\r\nserver:\r\n  port: 8785', 'e55e0b0a7cd49f9059051109a739dc59', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (264, 'gmis-device-server.yml', 'DEFAULT_GROUP', '  gmis:\r\n    database:\r\n      isSeata: true\r\n      multiTenantType: DATASOURCE\r\n    swagger:\r\n      docket:\r\n        device:\r\n          title: 气表服务\r\n          base-package: com.cdqckj.gmis.gasmeter.controller\r\n        node:  \r\n          title: 节点服务\r\n          base-package: com.cdqckj.gmis.node.controller\r\n\r\n  logging:\r\n    io.seata: debug\r\n    org.springframework.cloud.alibaba.seata.web: debug\r\n\r\n\r\n  server:\r\n    port: 8788\r\n\r\n\r\n  ## 请在nacos中新建一个名为: gmis-device-server.yml 的配置文件，并将： gmis-device-server/src/main/resources/gmis-device-server.yml 配置文件的内容移动过去\r\n  ## 然后删除此文件！！！\r\n', '6d7425b87e4a7e29248a93925ea1e8b6', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (265, 'gmis-statistics-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      statistics:\r\n        title: 统计服务服务\r\n        base-package: com.cdqckj.gmis.statistics\r\n\r\nserver:\r\n  port: 8999', 'aabc3ec8927fda0d77e7e617efe7d734', '2020-12-24 16:14:08', '2020-12-28 03:03:09', NULL, '172.16.92.77', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (266, 'gmis-business-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      temporary:\r\n        title: 柜台临时服务模块\r\n        base-package: com.cdqckj.gmis.biztemporary.controller\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8771', '156af490df9df44257f41f04b0bbfa90', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (267, 'gmis-install-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      install:\r\n        title: 报装模块\r\n        base-package: com.cdqckj.gmis.install.controller\r\n      security:\r\n        title: 安检模块\r\n        base-package: com.cdqckj.gmis.security.controller\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8775', '3afa408dd7b6bfb2eee8919dff17f4b6', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', 'gmis-install-server', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (268, 'gmis-security-check.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      security:\r\n        title: 安检模块\r\n        base-package: com.cdqckj.gmis.security.controller\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8776', '7ae8edad10fe9ad7790dd84cb43376e', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (269, 'gmis-invoice-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      invoice:\r\n        title: 发票服务\r\n        base-package: com.cdqckj.gmis.invoice.controller\r\n  e-invoice:\r\n    api:\r\n      rh.invoice.url: https://www.chinaeinv.com:943/igs/api/invoiceApi.jspa\r\n      rh.order.url: https://www.chinaeinv.com:943/igs/api/orderApi.jspa\r\n      rh.invoice.callbackUrl: http://222.212.93.70:60113/api/bizcenter/bill/rhKpCallback\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8783', '602d9584001b6244188a4c59352a852f', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (270, 'gmis-appmanager-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      appmanager:\r\n        title: 应用服务服务\r\n        base-package: com.cdqckj.gmis.appmanager.controller\r\n\r\nserver:\r\n  port: 8790\r\n\r\n\r\n## 请在nacos中新建一个名为: gmis-appmanager-server.yml 的配置文件，并将： gmis-appmanager-server/src/main/resources/gmis-appmanager-server.yml 配置文件的内容移动过去\r\n## 然后删除此文件！！！', '871915c775c502788523d77ece9583e3', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (271, 'gmis-admincenter-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      admincenter:\r\n        title: 后台管理聚合服务\r\n        base-package: com.cdqckj.gmis.appmanager.controller\r\n\r\nserver:\r\n  port: 8801\r\n\r\n\r\n## 请在nacos中新建一个名为: gmis-admincenter-server.yml 的配置文件，并将： gmis-admincenter-server/src/main/resources/gmis-admincenter-server.yml 配置文件的内容移动过去\r\n## 然后删除此文件！！！', '2a7699b628074a918d3c1396ea74c880', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (272, 'gmis-operationcenter-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      operationcenter:\r\n        title: 抄表app模块\r\n        base-package: com.cdqckj.gmis.operationcenter.readmeter.controller\r\n      installed:\r\n        title: 报装app模块\r\n        base-package: com.cdqckj.gmis.operationcenter.app.installed.controller\r\n      securityed:\r\n        title: 安检app模块\r\n        base-package: com.cdqckj.gmis.operationcenter.app.securityed.controller \r\n      operation:\r\n        title: 运维工单app模块\r\n        base-package: com.cdqckj.gmis.operationcenter.app.operation.controller     \r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8805', '7ae9e7cab95090278e06b6dd3fe01537', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (273, 'gmis-userarchive-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  injection:\r\n  # 是否启用 远程数据 手动注入\r\n  enabled: true\r\n  # 是否启用 远程数据 注解注入\r\n  aop-enabled: true\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      userarchive:\r\n        title: 用户档案模块\r\n        base-package: com.cdqckj.gmis.userarchive.controller\r\n      devicearchive:\r\n        title: 设备档案模块\r\n        base-package: com.cdqckj.gmis.devicearchive.controller\r\n      sim:\r\n        title: 卡表档案模块\r\n        base-package: com.cdqckj.gmis.sim.controller\r\n      nodearchive:\r\n        title: 节点档案模块\r\n        base-package: com.cdqckj.gmis.nodearchive.controller\r\n\r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8769\r\n', '9f4c2f98d22400e1d818dcadafb66024', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (274, 'gmis-oauthapi-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  swagger:\r\n    docket:\r\n      oauthapi:\r\n        title: api鉴权服务服务\r\n        base-package: com.cdqckj.gmis.oauthapi.controller\r\n\r\nserver:\r\n  port: 8789', '9daebbfb1316fa512edc261520b14f6f', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (275, 'gmis-apiGateway-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  log:\r\n    enabled: false\r\n\r\nspring:\r\n  autoconfigure:\r\n    # cao，升级到1.2.0后，gateway要排除这个依赖，排查了2个小时 2020年04月21日00:51:18\r\n    exclude: io.seata.integration.http.HttpAutoConfiguration\r\n  cloud:\r\n    gateway:\r\n      x-forwarded:\r\n        prefixEnabled: false\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n          lowerCaseServiceId: true\r\n      routes:\r\n        - id: oauth\r\n          uri: lb://gmis-oauth-server\r\n          predicates:\r\n            - Path=/oauth/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'\r\n        - id: customercenter\r\n          uri: lb://gmis-customercenter-server\r\n          predicates:\r\n            - Path=/customercenter/**\r\n          filters:\r\n            - StripPrefix=1\r\n            - name: Hystrix\r\n              args:\r\n                name: default\r\n                fallbackUri: \'forward:/fallback\'        \r\nserver:\r\n  port: 8763\r\n  servlet:\r\n    context-path: /appapi  # = server.servlet.context-path', '6133bfc6498c0cad708bbdb81d9d7e64', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (276, 'gmis-securityed-server', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      securityed:\r\n        title: 安检模块服务\r\n        base-package: com.cdqckj.gmis.securityed.controller\r\n\r\nserver:\r\n  port: 8873\r\nspring:\r\n  # 资源信息\r\n  messages:\r\n    # 国际化资源文件路径\r\n    basename: i18n/messages,i18n/common/messages\r\n\r\n## 请在nacos中新建一个名为: gmis-securityed-server.yml 的配置文件，并将： gmis-securityed-server/src/main/resources/gmis-securityed-server.yml 配置文件的内容移动过去\r\n## 然后删除此文件！！！\r\n', 'ae5e778929b12800d01dacf109075d58', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (277, 'gmis-installed-server', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      installed:\r\n        title: 报装模块服务\r\n        base-package: com.cdqckj.gmis.installed.controller\r\n\r\nserver:\r\n  port: 8872\r\n\r\nspring:\r\n  # 资源信息\r\n  messages:\r\n    # 国际化资源文件路径\r\n    basename: i18n/messages,i18n/common/messages\r\n\r\n## 请在nacos中新建一个名为: gmis-installed-server.yml 的配置文件，并将： gmis-installed-server/src/main/resources/gmis-installed-server.yml 配置文件的内容移动过去\r\n## 然后删除此文件！！！\r\n', 'f43e886e4180db3a30dd210d26ae6376', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (278, 'gmis-iot-qc-server.yml', 'DEFAULT_GROUP', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      calculate:\r\n        title: 秦川物联网模块\r\n        base-package: com.cdqckj.gmis.iot.qc.controller\r\n  #传感系统3.0\r\n  iot:\r\n    baseAddress: http://222.212.93.70:50086/qnms/V1_0_0/\r\n    token_time: 1440\r\n    subscribe_cache_day: 2\r\n  #远传系统1.0\r\n  cis:\r\n    address: http://172.16.92.156:8760/api/iotQc/data/\r\n\r\n\r\nserver:\r\n  port: 8776', 'aaf4ed0e709432003c7312fb6714d0fa', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', 'gmis-iot-qc-server', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (279, 'gmis-card-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 8784\r\n\r\ngmis:\r\n  swagger:\r\n    enabled: true\r\n    title: 气表卡服务\r\n    base-package: com.cdqckj.gmis\r\n  card: \r\n    card-core-conf: \"{21:\'10,11,12\',51:\'0,1,2,3,4\'}\"\r\n\r\nspring:\r\n  messages:\r\n    basename: i18n/messages\r\n    encoding: UTF-8\r\n\r\nauthentication:\r\n  expire: 28800               # token有效期为8小时\r\n  refreshExpire: 86400        # 刷新token有效期为24小时\r\n', '4540c7f6ba93a0568d12112cea7c5fcb', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', '', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (280, 'gmis-operation.yml', 'DEFAULT_GROUP', 'gmis:\r\n  swagger:\r\n    docket:\r\n      charges:\r\n        title: operation模块服务\r\n        base-package: com.cdqckj.gmis.operation.controller\r\n\r\nserver:\r\n  port: 8777', 'e1c89efc266166618d5aa2838109a6f6', '2020-12-24 16:14:08', '2020-12-24 16:14:08', NULL, '172.16.92.16', 'gmis-operation', '08eb1674-f9f1-487f-871d-bb4b19263fe1', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (349, 'metrics.exporterPrometheus-port', 'SEATA_GROUP', '9898', '7b9dc501afe4ee11c56a4831e20cee71', '2020-12-24 16:14:44', '2020-12-24 16:14:44', NULL, '172.16.92.16', '', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (350, 'gmis-card-server.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 8784\r\n\r\ngmis:\r\n  swagger:\r\n    enabled: true\r\n    title: 气表卡服务\r\n    base-package: com.cdqckj.gmis\r\n  card: \r\n    card-core-conf: \"{21:\'10,11,12\',51:\'0,1,2,3,4\'}\"\r\n\r\nspring:\r\n  messages:\r\n    basename: i18n/messages\r\n    encoding: UTF-8\r\n\r\nauthentication:\r\n  expire: 28800               # token有效期为8小时\r\n  refreshExpire: 86400        # 刷新token有效期为24小时', '38c87631136de608a1063d97e1a78331', '2021-01-20 14:41:24', '2021-01-20 14:41:24', NULL, '0:0:0:0:0:0:0:1', '', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'gmis-card-server', NULL, NULL, 'yaml', NULL);

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime(0) NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 56 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------
INSERT INTO `config_tags_relation` VALUES (107, 'gmis-userarchive-server', NULL, 'gmis-userarchive-server.yml', 'DEFAULT_GROUP', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 49);
INSERT INTO `config_tags_relation` VALUES (110, 'gmis-device-server', NULL, 'gmis-device-server.yml', 'DEFAULT_GROUP', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 50);
INSERT INTO `config_tags_relation` VALUES (216, 'gmis-business-server', NULL, 'gmis-business-server.yml', 'DEFAULT_GROUP', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 52);
INSERT INTO `config_tags_relation` VALUES (350, 'gmis-card-server', NULL, 'gmis-card-server.yml', 'DEFAULT_GROUP', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 54);
INSERT INTO `config_tags_relation` VALUES (106, 'gmis-charges-server', NULL, 'gmis-charges-server.yml', 'DEFAULT_GROUP', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 55);

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(64) UNSIGNED NOT NULL,
  `nid` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 543 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (258, 535, 'gmis-onlinepay-server.yml', 'DEFAULT_GROUP', '', 'gmis:\r\n  database:\r\n    isSeata: true\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n       pay:\r\n        title: 支付服务\r\n        base-package: com.cdqckj.gmis.pay.controller\r\n  service:\r\n    appId: wx5408d1ddde603ba9\r\n    mchId: 1603115705\r\n    apiKey: LIUSHI123456789LIUSHI12345678912\r\n    defaultUrl: http://weixinpaytest.free.idcfengye.com/pay/onlinepay/notify\r\n    apiV3key: e1dea31d334f48948313d90ac71efabb\r\n    mchSerialNo: 2339B893C2371AC03D7EB6A56840AFEB595F1C8E\r\n    appSubAppid: \"\"\r\n    appletSubAppid: \"\" \r\nserver:\r\n  port: 8781\r\n\r\nspring:\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        metadata:\r\n          grayversion: 1.0', '5b7a4060b5206736296dd6aa5bb63585', '2021-01-11 05:26:00', '2021-01-11 13:26:01', NULL, '172.16.92.34', 'U', '08eb1674-f9f1-487f-871d-bb4b19263fe1');
INSERT INTO `his_config_info` VALUES (0, 536, 'gmis-card-server.yml', 'DEFAULT_GROUP', '', 'server:\r\n  port: 8784\r\n\r\ngmis:\r\n  swagger:\r\n    enabled: true\r\n    title: 气表卡服务\r\n    base-package: com.cdqckj.gmis\r\n  card: \r\n    card-core-conf: \"{21:\'10,11,12\',51:\'0,1,2,3,4\'}\"\r\n\r\nspring:\r\n  messages:\r\n    basename: i18n/messages\r\n    encoding: UTF-8\r\n\r\nauthentication:\r\n  expire: 28800               # token有效期为8小时\r\n  refreshExpire: 86400        # 刷新token有效期为24小时', '38c87631136de608a1063d97e1a78331', '2021-01-20 06:41:20', '2021-01-20 14:41:24', NULL, '0:0:0:0:0:0:0:1', 'I', '08eb1674-f9f1-487f-871d-bb4b19263fe2');
INSERT INTO `his_config_info` VALUES (77, 537, 'mysql.yml', 'DEFAULT_GROUP', '', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到gmis-authority-server-dev.yml中将数据库名和ip改掉\r\ngmis:\r\n  seata:\r\n    ip: ${SEATA_IP:172.16.92.250}\r\n    port: ${SEATA_PORT:8091}\r\n    namespace: ${SEATA_ID:3cca7d98-3b1c-44d3-90e5-86abaaf0048a}\r\n  mysql:\r\n    ip: 172.16.92.156\r\n    port: 3306\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    database: gmis_defaults\r\n    username: root\r\n    password: 123456\r\n    url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n  database:      # 数据库配置请看DatabaseProperties类上的注释\r\n    isSeata: true\r\n    isNotWrite: false\r\n    tenantDatabasePrefix: gmis_base\r\n    multiTenantType: DATASOURCE\r\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\r\n    worker-id: 0\r\n    data-center-id: 0\r\n\r\n# mysql 通用配置\r\nspring:\r\n  datasource:\r\n    # 从这里开始(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    dynamic:\r\n      enabled: false  # 这里一定要写成false， 是否开启根据 gmis.database.multiTenantType 来决定\r\n      p6spy: true\r\n      seata: ${gmis.database.isSeata:false}\r\n      druid:\r\n        initialSize: 10\r\n        minIdle: 10\r\n        maxActive: 50\r\n        max-wait: 60000\r\n        pool-prepared-statements: true\r\n        max-pool-prepared-statement-per-connection-size: 20\r\n        validation-query: SELECT \'x\'\r\n        test-on-borrow: false\r\n        test-on-return: false\r\n        test-while-idle: true\r\n        time-between-eviction-runs-millis: 30000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n        min-evictable-idle-time-millis: 150000    # 配置一个连接在池中最小生存的时间，单位是毫秒\r\n        filters: stat,wall\r\n        wall:\r\n          comment-allow: true\r\n          multiStatementAllow: true\r\n          noneBaseStatementAllow: true\r\n      datasource:\r\n        master:       # 默认的数据源\r\n          username: ${gmis.mysql.username}\r\n          password: ${gmis.mysql.password}\r\n          driver-class-name: ${gmis.mysql.driverClassName}\r\n          url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n          db-type: mysql\r\n    # 从这里结束(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    druid:\r\n      enable: true\r\n      # 从这里开始(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n      username: ${gmis.mysql.username}\r\n      password: ${gmis.mysql.password}\r\n      driver-class-name: ${gmis.mysql.driverClassName}\r\n      url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n      db-type: mysql\r\n      initialSize: 10\r\n      minIdle: 10\r\n      maxActive: 50\r\n      max-wait: 60000\r\n      pool-prepared-statements: true\r\n      max-pool-prepared-statement-per-connection-size: 20\r\n      validation-query: SELECT \'x\'\r\n      test-on-borrow: false\r\n      test-on-return: false\r\n      test-while-idle: true\r\n      time-between-eviction-runs-millis: 30000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n      min-evictable-idle-time-millis: 150000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n      filters: stat,wall\r\n      filter:\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            commentAllow: true\r\n            multiStatementAllow: true\r\n            noneBaseStatementAllow: true\r\n      # 从这里结束(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n\r\n      # 以下的2段配置，同时适用于所有模式\r\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\r\n        enabled: true\r\n        url-pattern: /*\r\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\r\n        session-stat-max-count: 1000\r\n        profile-enable: true\r\n        session-stat-enable: false\r\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\r\n        enabled: true\r\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\r\n        reset-enable: true    #允许清空统计数据\r\n        login-username: gmis\r\n        login-password: gmis\r\n\r\nmybatis-plus:\r\n  mapper-locations:\r\n    - classpath*:mapper_**/**/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.cdqckj.gmis.*.entity;com.cdqckj.gmis.database.mybatis.typehandler\r\n  typeEnumsPackage: com.cdqckj.gmis.*.enumeration\r\n  global-config:\r\n    db-config:\r\n      id-type: INPUT\r\n      insert-strategy: NOT_NULL\r\n      update-strategy: NOT_NULL\r\n      select-strategy: NOT_EMPTY\r\n  configuration:\r\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n    #配置JdbcTypeForNull, oracle数据库必须配置\r\n    jdbc-type-for-null: \'null\'\r\n\r\n# 分布式事务相关\r\nseata:\r\n  enabled: ${gmis.database.isSeata}\r\n  enableAutoDataSourceProxy: true\r\n  tx-service-group: gmis_admin_seata_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: ${gmis.nacos.ip}:${gmis.nacos.port}\r\n      username: ${gmis.nacos.username}\r\n      password: ${gmis.nacos.password}\r\n      namespace: ${gmis.seata.namespace}\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: ${gmis.nacos.ip}:${gmis.nacos.port}\r\n      username: ${gmis.nacos.username}\r\n      password: ${gmis.nacos.password}\r\n      namespace: ${gmis.seata.namespace}\r\n  service:\r\n    grouplist:\r\n      default: ${gmis.seata.ip:}:${gmis.seata.port:}\r\n    vgroup-mapping:\r\n      gmis_admin_seata_tx_group: default\r\n    disable-global-transaction: false\r\n  client:\r\n    rm:\r\n      report-success-enable: false\r\n', 'fc528955f3dbb0ff19ca61089b5faf96', '2021-01-26 07:54:30', '2021-01-26 15:54:31', NULL, '0:0:0:0:0:0:0:1', 'U', '08eb1674-f9f1-487f-871d-bb4b19263fe2');
INSERT INTO `his_config_info` VALUES (106, 538, 'gmis-charges-server.yml', 'DEFAULT_GROUP', '', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    docket:\r\n      charges:\r\n        title: 收费模块服务\r\n        base-package: .controller\r\n\r\nserver:\r\n  port: 8785', 'c91db20f6dd6564ef96490c92fa517b3', '2021-01-30 07:37:42', '2021-01-30 15:37:42', NULL, '0:0:0:0:0:0:0:1', 'U', '08eb1674-f9f1-487f-871d-bb4b19263fe2');
INSERT INTO `his_config_info` VALUES (77, 539, 'mysql.yml', 'DEFAULT_GROUP', '', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到gmis-authority-server-dev.yml中将数据库名和ip改掉\r\ngmis:\r\n  seata:\r\n    ip: ${SEATA_IP:172.16.92.250}\r\n    port: ${SEATA_PORT:8091}\r\n    namespace: ${SEATA_ID:3cca7d98-3b1c-44d3-90e5-86abaaf0048a}\r\n  mysql:\r\n    ip: 172.16.92.156\r\n    port: 3306\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    database: gmis_defaults\r\n    username: root\r\n    password: 123456\r\n    url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n  database:      # 数据库配置请看DatabaseProperties类上的注释\r\n    isSeata: false\r\n    isNotWrite: false\r\n    tenantDatabasePrefix: gmis_base\r\n    multiTenantType: DATASOURCE\r\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\r\n    worker-id: 0\r\n    data-center-id: 0\r\n\r\n# mysql 通用配置\r\nspring:\r\n  datasource:\r\n    # 从这里开始(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    dynamic:\r\n      enabled: false  # 这里一定要写成false， 是否开启根据 gmis.database.multiTenantType 来决定\r\n      p6spy: true\r\n      seata: ${gmis.database.isSeata:false}\r\n      druid:\r\n        initialSize: 10\r\n        minIdle: 10\r\n        maxActive: 50\r\n        max-wait: 60000\r\n        pool-prepared-statements: true\r\n        max-pool-prepared-statement-per-connection-size: 20\r\n        validation-query: SELECT \'x\'\r\n        test-on-borrow: false\r\n        test-on-return: false\r\n        test-while-idle: true\r\n        time-between-eviction-runs-millis: 30000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n        min-evictable-idle-time-millis: 150000    # 配置一个连接在池中最小生存的时间，单位是毫秒\r\n        filters: stat,wall\r\n        wall:\r\n          comment-allow: true\r\n          multiStatementAllow: true\r\n          noneBaseStatementAllow: true\r\n      datasource:\r\n        master:       # 默认的数据源\r\n          username: ${gmis.mysql.username}\r\n          password: ${gmis.mysql.password}\r\n          driver-class-name: ${gmis.mysql.driverClassName}\r\n          url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n          db-type: mysql\r\n    # 从这里结束(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    druid:\r\n      enable: true\r\n      # 从这里开始(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n      username: ${gmis.mysql.username}\r\n      password: ${gmis.mysql.password}\r\n      driver-class-name: ${gmis.mysql.driverClassName}\r\n      url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n      db-type: mysql\r\n      initialSize: 10\r\n      minIdle: 10\r\n      maxActive: 50\r\n      max-wait: 60000\r\n      pool-prepared-statements: true\r\n      max-pool-prepared-statement-per-connection-size: 20\r\n      validation-query: SELECT \'x\'\r\n      test-on-borrow: false\r\n      test-on-return: false\r\n      test-while-idle: true\r\n      time-between-eviction-runs-millis: 30000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n      min-evictable-idle-time-millis: 150000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n      filters: stat,wall\r\n      filter:\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            commentAllow: true\r\n            multiStatementAllow: true\r\n            noneBaseStatementAllow: true\r\n      # 从这里结束(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n\r\n      # 以下的2段配置，同时适用于所有模式\r\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\r\n        enabled: true\r\n        url-pattern: /*\r\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\r\n        session-stat-max-count: 1000\r\n        profile-enable: true\r\n        session-stat-enable: false\r\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\r\n        enabled: true\r\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\r\n        reset-enable: true    #允许清空统计数据\r\n        login-username: gmis\r\n        login-password: gmis\r\n\r\nmybatis-plus:\r\n  mapper-locations:\r\n    - classpath*:mapper_**/**/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.cdqckj.gmis.*.entity;com.cdqckj.gmis.database.mybatis.typehandler\r\n  typeEnumsPackage: com.cdqckj.gmis.*.enumeration\r\n  global-config:\r\n    db-config:\r\n      id-type: INPUT\r\n      insert-strategy: NOT_NULL\r\n      update-strategy: NOT_NULL\r\n      select-strategy: NOT_EMPTY\r\n  configuration:\r\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n    #配置JdbcTypeForNull, oracle数据库必须配置\r\n    jdbc-type-for-null: \'null\'\r\n\r\n# 分布式事务相关\r\nseata:\r\n  enabled: ${gmis.database.isSeata}\r\n  enableAutoDataSourceProxy: true\r\n  tx-service-group: gmis_admin_seata_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: ${gmis.nacos.ip}:${gmis.nacos.port}\r\n      username: ${gmis.nacos.username}\r\n      password: ${gmis.nacos.password}\r\n      namespace: ${gmis.seata.namespace}\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: ${gmis.nacos.ip}:${gmis.nacos.port}\r\n      username: ${gmis.nacos.username}\r\n      password: ${gmis.nacos.password}\r\n      namespace: ${gmis.seata.namespace}\r\n  service:\r\n    grouplist:\r\n      default: ${gmis.seata.ip:}:${gmis.seata.port:}\r\n    vgroup-mapping:\r\n      gmis_admin_seata_tx_group: default\r\n    disable-global-transaction: false\r\n  client:\r\n    rm:\r\n      report-success-enable: false\r\n', 'd65d17ca8c4b01da4bf4d4252ed28629', '2021-01-30 07:55:37', '2021-01-30 15:55:38', NULL, '0:0:0:0:0:0:0:1', 'U', '08eb1674-f9f1-487f-871d-bb4b19263fe2');
INSERT INTO `his_config_info` VALUES (77, 540, 'mysql.yml', 'DEFAULT_GROUP', '', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到gmis-authority-server-dev.yml中将数据库名和ip改掉\r\ngmis:\r\n  seata:\r\n    ip: ${SEATA_IP:172.16.92.250}\r\n    port: ${SEATA_PORT:8091}\r\n    namespace: ${SEATA_ID:3cca7d98-3b1c-44d3-90e5-86abaaf0048a}\r\n  mysql:\r\n    ip: 172.16.4.212\r\n    port: 3307\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    database: gmis_defaults\r\n    username: root\r\n    password: Qc__xp2020\r\n    url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n  database:      # 数据库配置请看DatabaseProperties类上的注释\r\n    isSeata: false\r\n    isNotWrite: false\r\n    tenantDatabasePrefix: gmis_base\r\n    multiTenantType: DATASOURCE\r\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\r\n    worker-id: 0\r\n    data-center-id: 0\r\n\r\n# mysql 通用配置\r\nspring:\r\n  datasource:\r\n    # 从这里开始(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    dynamic:\r\n      enabled: false  # 这里一定要写成false， 是否开启根据 gmis.database.multiTenantType 来决定\r\n      p6spy: true\r\n      seata: ${gmis.database.isSeata:false}\r\n      druid:\r\n        initialSize: 10\r\n        minIdle: 10\r\n        maxActive: 50\r\n        max-wait: 60000\r\n        pool-prepared-statements: true\r\n        max-pool-prepared-statement-per-connection-size: 20\r\n        validation-query: SELECT \'x\'\r\n        test-on-borrow: false\r\n        test-on-return: false\r\n        test-while-idle: true\r\n        time-between-eviction-runs-millis: 30000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n        min-evictable-idle-time-millis: 150000    # 配置一个连接在池中最小生存的时间，单位是毫秒\r\n        filters: stat,wall\r\n        wall:\r\n          comment-allow: true\r\n          multiStatementAllow: true\r\n          noneBaseStatementAllow: true\r\n      datasource:\r\n        master:       # 默认的数据源\r\n          username: ${gmis.mysql.username}\r\n          password: ${gmis.mysql.password}\r\n          driver-class-name: ${gmis.mysql.driverClassName}\r\n          url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n          db-type: mysql\r\n    # 从这里结束(dynamic)，中间的这段配置用于 gmis.database.multiTenantType == DATASOURCE 时\r\n    druid:\r\n      enable: true\r\n      # 从这里开始(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n      username: ${gmis.mysql.username}\r\n      password: ${gmis.mysql.password}\r\n      driver-class-name: ${gmis.mysql.driverClassName}\r\n      url: jdbc:mysql://${gmis.mysql.ip}:${gmis.mysql.port}/${gmis.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n      db-type: mysql\r\n      initialSize: 10\r\n      minIdle: 10\r\n      maxActive: 50\r\n      max-wait: 60000\r\n      pool-prepared-statements: true\r\n      max-pool-prepared-statement-per-connection-size: 20\r\n      validation-query: SELECT \'x\'\r\n      test-on-borrow: false\r\n      test-on-return: false\r\n      test-while-idle: true\r\n      time-between-eviction-runs-millis: 30000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n      min-evictable-idle-time-millis: 150000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n      filters: stat,wall\r\n      filter:\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            commentAllow: true\r\n            multiStatementAllow: true\r\n            noneBaseStatementAllow: true\r\n      # 从这里结束(druid)，中间的这段配置用于 gmis.database.multiTenantType != DATASOURCE 时\r\n\r\n      # 以下的2段配置，同时适用于所有模式\r\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\r\n        enabled: true\r\n        url-pattern: /*\r\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\r\n        session-stat-max-count: 1000\r\n        profile-enable: true\r\n        session-stat-enable: false\r\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\r\n        enabled: true\r\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\r\n        reset-enable: true    #允许清空统计数据\r\n        login-username: gmis\r\n        login-password: gmis\r\n\r\nmybatis-plus:\r\n  mapper-locations:\r\n    - classpath*:mapper_**/**/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.cdqckj.gmis.*.entity;com.cdqckj.gmis.database.mybatis.typehandler\r\n  typeEnumsPackage: com.cdqckj.gmis.*.enumeration\r\n  global-config:\r\n    db-config:\r\n      id-type: INPUT\r\n      insert-strategy: NOT_NULL\r\n      update-strategy: NOT_NULL\r\n      select-strategy: NOT_EMPTY\r\n  configuration:\r\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n    #配置JdbcTypeForNull, oracle数据库必须配置\r\n    jdbc-type-for-null: \'null\'\r\n\r\n# 分布式事务相关\r\nseata:\r\n  enabled: ${gmis.database.isSeata}\r\n  enableAutoDataSourceProxy: true\r\n  tx-service-group: gmis_admin_seata_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: ${gmis.nacos.ip}:${gmis.nacos.port}\r\n      username: ${gmis.nacos.username}\r\n      password: ${gmis.nacos.password}\r\n      namespace: ${gmis.seata.namespace}\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: ${gmis.nacos.ip}:${gmis.nacos.port}\r\n      username: ${gmis.nacos.username}\r\n      password: ${gmis.nacos.password}\r\n      namespace: ${gmis.seata.namespace}\r\n  service:\r\n    grouplist:\r\n      default: ${gmis.seata.ip:}:${gmis.seata.port:}\r\n    vgroup-mapping:\r\n      gmis_admin_seata_tx_group: default\r\n    disable-global-transaction: false\r\n  client:\r\n    rm:\r\n      report-success-enable: false\r\n', '8b67d9184baa4ff8c8d74c83cef48ade', '2021-02-01 06:05:21', '2021-02-01 14:05:21', NULL, '0:0:0:0:0:0:0:1', 'U', '08eb1674-f9f1-487f-871d-bb4b19263fe2');
INSERT INTO `his_config_info` VALUES (82, 541, 'gmis-bizcenter-server.yml', 'DEFAULT_GROUP', '', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      configure:\r\n        title: 运营配置模块\r\n        base-package: com.cdqckj.gmis.bizcenter.operation.config.controller\r\n      device:\r\n        title: 设备服务模块\r\n        base-package: com.cdqckj.gmis.bizcenter.device.archives.controller\r\n      systemparam:\r\n        title: 系统配置模块\r\n        base-package: com.cdqckj.gmis.bizcenter.sys.config.controller\r\n      userarchive:\r\n        title: 客户档案模块\r\n        base-package: com.cdqckj.gmis.bizcenter.customer.archives.controller\r\n      devicearchive:\r\n        title: 设备档案模块\r\n        base-package: com.cdqckj.gmis.bizcenter.device.archives.controller\r\n      install:\r\n        title: 报装模块\r\n        base-package: com.cdqckj.gmis.bizcenter.operation.install.controller\r\n      securitycheck:\r\n        title: 安检模块\r\n        base-package: com.cdqckj.gmis.bizcenter.securitycheck.controller\r\n      maintenance:\r\n        title: 运行维护模块\r\n        base-package: com.cdqckj.gmis.bizcenter.operation.maintain.controller\r\n      tempcounter:\r\n        title: 临时综合\r\n        base-package: com.cdqckj.gmis.bizcenter.temp.counter.controller\r\n      charges:\r\n        title: 收费模块\r\n        base-package: com.cdqckj.gmis.bizcenter.charges.controller\r\n      readmeter:\r\n        title: 抄表服务\r\n        base-package: com.cdqckj.gmis.bizcenter.read.meter.controller\r\n      dailycounter:\r\n        title: 日常综合\r\n        base-package: com.cdqckj.gmis.bizcenter.daily.counter.controller\r\n      iot:\r\n        title: 远传表模块\r\n        base-package: com.cdqckj.gmis.bizcenter.iot.controller\r\n      \r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8802\r\n', '7882a3a3986228f7ee187fd0fe068fa8', '2021-02-05 05:15:20', '2021-02-05 13:15:20', NULL, '0:0:0:0:0:0:0:1', 'U', '08eb1674-f9f1-487f-871d-bb4b19263fe2');
INSERT INTO `his_config_info` VALUES (82, 542, 'gmis-bizcenter-server.yml', 'DEFAULT_GROUP', '', 'gmis:\r\n  database:\r\n    isSeata: false\r\n    multiTenantType: DATASOURCE\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      configure:\r\n        title: 运营配置模块\r\n        base-package: com.cdqckj.gmis.bizcenter.operation.config.controller\r\n      device:\r\n        title: 设备服务模块\r\n        base-package: com.cdqckj.gmis.bizcenter.device.archives.controller\r\n      systemparam:\r\n        title: 系统配置模块\r\n        base-package: com.cdqckj.gmis.bizcenter.sys.config.controller\r\n      userarchive:\r\n        title: 客户档案模块\r\n        base-package: com.cdqckj.gmis.bizcenter.customer.archives.controller\r\n      devicearchive:\r\n        title: 设备档案模块\r\n        base-package: com.cdqckj.gmis.bizcenter.device.archives.controller\r\n      install:\r\n        title: 报装模块\r\n        base-package: com.cdqckj.gmis.bizcenter.operation.install.controller\r\n      securitycheck:\r\n        title: 安检模块\r\n        base-package: com.cdqckj.gmis.bizcenter.securitycheck.controller\r\n      maintenance:\r\n        title: 运行维护模块\r\n        base-package: com.cdqckj.gmis.bizcenter.operation.maintain.controller\r\n      tempcounter:\r\n        title: 临时综合\r\n        base-package: com.cdqckj.gmis.bizcenter.temp.counter.controller\r\n      charges:\r\n        title: 收费模块\r\n        base-package: com.cdqckj.gmis.bizcenter.charges.controller\r\n      calculate:\r\n        title: 计费模块\r\n        base-package: com.cdqckj.gmis.calculate.controller  \r\n      readmeter:\r\n        title: 抄表服务\r\n        base-package: com.cdqckj.gmis.bizcenter.read.meter.controller\r\n      dailycounter:\r\n        title: 日常综合\r\n        base-package: com.cdqckj.gmis.bizcenter.daily.counter.controller\r\n      iot:\r\n        title: 远传表模块\r\n        base-package: com.cdqckj.gmis.bizcenter.iot.controller\r\n      \r\nlogging:\r\n  io.seata: debug\r\n  org.springframework.cloud.alibaba.seata.web: debug\r\n\r\nserver:\r\n  port: 8802\r\n', 'b05eb4ae8e6c8926ab1b1eee0b7803df', '2021-02-05 05:23:30', '2021-02-05 13:23:30', NULL, '0:0:0:0:0:0:0:1', 'U', '08eb1674-f9f1-487f-871d-bb4b19263fe2');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `resource` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 6 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (1, '1', '08eb1674-f9f1-487f-871d-bb4b19263fe1', 'GMIS9.0', 'GMIS9.0业务系统', 'nacos', 1591076296471, 1591076296471);
INSERT INTO `tenant_info` VALUES (2, '1', '08eb1674-f9f1-487f-871d-bb4b19263fe2', 'GMIS9.0-TEST', 'GMIS9.0-TEST', 'nacos', 1597641740184, 1597641740184);
INSERT INTO `tenant_info` VALUES (5, '1', '3cca7d98-3b1c-44d3-90e5-86abaaf0048a', 'GMIS-SEATA', 'GMIS-SEATA', 'nacos', 1602644876083, 1602644876083);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
